

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Aug 07 14:08:25 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F1613
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     	;# 
    40  0001                     	;# 
    41  0002                     	;# 
    42  0003                     	;# 
    43  0004                     	;# 
    44  0005                     	;# 
    45  0006                     	;# 
    46  0007                     	;# 
    47  0008                     	;# 
    48  0009                     	;# 
    49  000A                     	;# 
    50  000B                     	;# 
    51  000C                     	;# 
    52  000E                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0014                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001A                     	;# 
    65  001B                     	;# 
    66  001B                     	;# 
    67  001C                     	;# 
    68  001D                     	;# 
    69  001E                     	;# 
    70  001F                     	;# 
    71  008C                     	;# 
    72  008E                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0093                     	;# 
    76  0094                     	;# 
    77  0095                     	;# 
    78  0096                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  009F                     	;# 
    88  010C                     	;# 
    89  010E                     	;# 
    90  0111                     	;# 
    91  0112                     	;# 
    92  0113                     	;# 
    93  0114                     	;# 
    94  0115                     	;# 
    95  0116                     	;# 
    96  0117                     	;# 
    97  0118                     	;# 
    98  0119                     	;# 
    99  011C                     	;# 
   100  011D                     	;# 
   101  018C                     	;# 
   102  018E                     	;# 
   103  0191                     	;# 
   104  0191                     	;# 
   105  0192                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0194                     	;# 
   109  0195                     	;# 
   110  0196                     	;# 
   111  0197                     	;# 
   112  020C                     	;# 
   113  020E                     	;# 
   114  028C                     	;# 
   115  028E                     	;# 
   116  0291                     	;# 
   117  0291                     	;# 
   118  0291                     	;# 
   119  0292                     	;# 
   120  0292                     	;# 
   121  0293                     	;# 
   122  0294                     	;# 
   123  0298                     	;# 
   124  0298                     	;# 
   125  0298                     	;# 
   126  0299                     	;# 
   127  0299                     	;# 
   128  029A                     	;# 
   129  029B                     	;# 
   130  029E                     	;# 
   131  030C                     	;# 
   132  030E                     	;# 
   133  038C                     	;# 
   134  038E                     	;# 
   135  0391                     	;# 
   136  0392                     	;# 
   137  0393                     	;# 
   138  0397                     	;# 
   139  0398                     	;# 
   140  0399                     	;# 
   141  0413                     	;# 
   142  0413                     	;# 
   143  0414                     	;# 
   144  0414                     	;# 
   145  0415                     	;# 
   146  0416                     	;# 
   147  0417                     	;# 
   148  0418                     	;# 
   149  041A                     	;# 
   150  041A                     	;# 
   151  041B                     	;# 
   152  041B                     	;# 
   153  041C                     	;# 
   154  041D                     	;# 
   155  041E                     	;# 
   156  041F                     	;# 
   157  0691                     	;# 
   158  0692                     	;# 
   159  0693                     	;# 
   160  0694                     	;# 
   161  0695                     	;# 
   162  0696                     	;# 
   163  0697                     	;# 
   164  0698                     	;# 
   165  0699                     	;# 
   166  069A                     	;# 
   167  0711                     	;# 
   168  0712                     	;# 
   169  0713                     	;# 
   170  0714                     	;# 
   171  0715                     	;# 
   172  0718                     	;# 
   173  0719                     	;# 
   174  071A                     	;# 
   175  071B                     	;# 
   176  071C                     	;# 
   177  071D                     	;# 
   178  0791                     	;# 
   179  0792                     	;# 
   180  0793                     	;# 
   181  0794                     	;# 
   182  0795                     	;# 
   183  0796                     	;# 
   184  0797                     	;# 
   185  0798                     	;# 
   186  0799                     	;# 
   187  079A                     	;# 
   188  0D8C                     	;# 
   189  0D8C                     	;# 
   190  0D8D                     	;# 
   191  0D8E                     	;# 
   192  0D8F                     	;# 
   193  0D8F                     	;# 
   194  0D90                     	;# 
   195  0D91                     	;# 
   196  0D92                     	;# 
   197  0D92                     	;# 
   198  0D93                     	;# 
   199  0D94                     	;# 
   200  0D95                     	;# 
   201  0D95                     	;# 
   202  0D96                     	;# 
   203  0D97                     	;# 
   204  0D98                     	;# 
   205  0D99                     	;# 
   206  0D9A                     	;# 
   207  0D9B                     	;# 
   208  0D9C                     	;# 
   209  0D9D                     	;# 
   210  0D9E                     	;# 
   211  0D9E                     	;# 
   212  0D9F                     	;# 
   213  0DA0                     	;# 
   214  0DA1                     	;# 
   215  0DA1                     	;# 
   216  0DA2                     	;# 
   217  0DA3                     	;# 
   218  0DA4                     	;# 
   219  0DA4                     	;# 
   220  0DA5                     	;# 
   221  0DA6                     	;# 
   222  0DA7                     	;# 
   223  0DA7                     	;# 
   224  0DA8                     	;# 
   225  0DA9                     	;# 
   226  0DAA                     	;# 
   227  0DAB                     	;# 
   228  0DAC                     	;# 
   229  0DAD                     	;# 
   230  0DAE                     	;# 
   231  0DAF                     	;# 
   232  0F8C                     	;# 
   233  0F8D                     	;# 
   234  0F91                     	;# 
   235  0F96                     	;# 
   236  0F97                     	;# 
   237  0F9C                     	;# 
   238  0F9D                     	;# 
   239  0F9E                     	;# 
   240  0FE3                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252                           
   253                           	psect	nvCOMMON
   254  007A                     __pnvCOMMON:	
   255  007A                     _Timer1ReloadVal:	
   256  007A                     	ds	2
   257  0016                     _TMR1	set	22
   258  000B                     _INTCONbits	set	11
   259  0011                     _PIR1bits	set	17
   260  000C                     _PORTAbits	set	12
   261  001B                     _PR2	set	27
   262  0018                     _T1CON	set	24
   263  0018                     _T1CONbits	set	24
   264  0019                     _T1GCON	set	25
   265  001E                     _T2CLKCON	set	30
   266  001C                     _T2CON	set	28
   267  001C                     _T2CONbits	set	28
   268  0017                     _TMR1H	set	23
   269  0016                     _TMR1L	set	22
   270  001A                     _TMR2	set	26
   271  0089                     _TMR2IF	set	137
   272  009B                     _ADRES	set	155
   273  009D                     _ADCON0	set	157
   274  009D                     _ADCON0bits	set	157
   275  009E                     _ADCON1	set	158
   276  009C                     _ADRESH	set	156
   277  009B                     _ADRESL	set	155
   278  0099                     _OSCCON	set	153
   279  0091                     _PIE1bits	set	145
   280  008C                     _TRISA	set	140
   281  008E                     _TRISC	set	142
   282  0111                     _CM1CON0	set	273
   283  0112                     _CM1CON1	set	274
   284  0113                     _CM2CON0	set	275
   285  0114                     _CM2CON1	set	276
   286  0115                     _CMOUTbits	set	277
   287  0118                     _DAC1CON0	set	280
   288  0119                     _DAC1CON1	set	281
   289  0117                     _FVRCONbits	set	279
   290  010C                     _LATA	set	268
   291  018C                     _ANSELA	set	396
   292  018E                     _ANSELC	set	398
   293  0291                     _CCPR1	set	657
   294  0293                     _CCP1CON	set	659
   295  0693                     _CWG1AS0	set	1683
   296  0693                     _CWG1AS0bits	set	1683
   297  0694                     _CWG1AS1bits	set	1684
   298  0699                     _CWG1CLKCON	set	1689
   299  0696                     _CWG1CON0	set	1686
   300  0696                     _CWG1CON0bits	set	1686
   301  0697                     _CWG1CON1	set	1687
   302  0692                     _CWG1DBF	set	1682
   303  0691                     _CWG1DBR	set	1681
   304  069A                     _CWG1ISM	set	1690
   305  0698                     _CWG1OCON1	set	1688
   306  0D92                     _SMT1CPW	set	3474
   307  0D95                     _SMT1PR	set	3477
   308  0D8C                     _SMT1TMR	set	3468
   309  0D9B                     _SMT1CLK	set	3483
   310  0D98                     _SMT1CON0	set	3480
   311  0D99                     _SMT1CON1	set	3481
   312  0D99                     _SMT1CON1bits	set	3481
   313  0D9C                     _SMT1SIG	set	3484
   314  0D8F                     _SMT1CPR	set	3471
   315                           
   316                           ; #config settings
   317  0000                     
   318                           	psect	cinit
   319  007A                     start_initialization:	
   320  007A                     __initialization:	
   321                           
   322                           ; Clear objects allocated to COMMON
   323  007A  01F7               	clrf	__pbssCOMMON& (0+127)
   324  007B  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   325  007C  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   326                           
   327                           ; Clear objects allocated to BANK0
   328  007D  3020               	movlw	low __pbssBANK0
   329  007E  0084               	movwf	4
   330  007F  3000               	movlw	high __pbssBANK0
   331  0080  0085               	movwf	5
   332  0081  3023               	movlw	35
   333  0082  251B               	fcall	clear_ram0
   334  0083                     end_of_initialization:	
   335                           ;End of C runtime variable initialization code
   336                           
   337  0083                     __end_of__initialization:	
   338  0083  0020               	movlb	0
   339  0084  2B4B               	ljmp	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMMON
   342  0077                     __pbssCOMMON:	
   343  0077                     _TempResult:	
   344  0077                     	ds	2
   345  0079                     _SpeedCounter:	
   346  0079                     	ds	1
   347                           
   348                           	psect	bssBANK0
   349  0020                     __pbssBANK0:	
   350  0020                     _IntegOut:	
   351  0020                     	ds	3
   352  0023                     _PWMResult:	
   353  0023                     	ds	3
   354  0026                     _PropOut:	
   355  0026                     	ds	3
   356  0029                     _SpeedCalculation:	
   357  0029                     	ds	3
   358  002C                     _SpeedMeasurement:	
   359  002C                     	ds	3
   360  002F                     _DutyCycle:	
   361  002F                     	ds	2
   362  0031                     _IntegValue:	
   363  0031                     	ds	2
   364  0033                     _PIValue:	
   365  0033                     	ds	2
   366  0035                     _PWMValue:	
   367  0035                     	ds	2
   368  0037                     _PropValue:	
   369  0037                     	ds	2
   370  0039                     _SpeedActual:	
   371  0039                     	ds	2
   372  003B                     _SpeedError:	
   373  003B                     	ds	2
   374  003D                     _SpeedIntegral:	
   375  003D                     	ds	2
   376  003F                     _SpeedReference:	
   377  003F                     	ds	2
   378  0041                     _ADCValue:	
   379  0041                     	ds	2
   380                           
   381                           	psect	clrtext
   382  051B                     clear_ram0:	
   383                           ;	Called with FSR0 containing the base address, and
   384                           ;	WREG with the size to clear
   385                           
   386  051B  0064               	clrwdt	;clear the watchdog before getting into this loop
   387  051C                     clrloop0:	
   388  051C  0180               	clrf	0	;clear RAM location pointed to by FSR
   389  051D  3101               	addfsr 0,1
   390  051E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   391  051F  2D1C               	goto	clrloop0	;have we reached the end yet?
   392  0520  3400               	retlw	0	;all done for this memory range, return
   393                           
   394                           	psect	cstackCOMMON
   395  0070                     __pcstackCOMMON:	
   396  0070                     ?_ADC_Initialization:	
   397  0070                     ?_TMR1_Reload:	
   398                           ; 0 bytes @ 0x0
   399                           
   400  0070                     ??_TMR1_Reload:	
   401                           ; 0 bytes @ 0x0
   402                           
   403  0070                     ?_Check_Overcurrent:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0070                     ??_Check_Overcurrent:	
   407                           ; 0 bytes @ 0x0
   408                           
   409  0070                     ?_Pin_Manager:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0070                     ?_FVR_Initialization:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0070                     ?_Comp_Initialization:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0070                     ?_DAC_Initialization:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0070                     ?_CCP_Initialization:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0070                     ?_CWG_Initialization:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0070                     ?_SMT_Initialization:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0070                     ?_TMR1_Initialization:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0070                     ?_Int_Initialization:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0070                     ?_PWM_Calculation:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0070                     ?_DesiredSpeed_Calculation:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0070                     ?_Get_ActualSpeed:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0070                     ?_PI_Calculation:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0070                     ?_Int_:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0070                     ?_main:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0070                     ?i1_ADC_Initialization:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0070                     ??i1_ADC_Initialization:	
   458                           ; 0 bytes @ 0x0
   459                           
   460                           
   461                           ; 0 bytes @ 0x0
   462  0070                     	ds	3
   463  0073                     ??_Int_:	
   464                           
   465                           ; 0 bytes @ 0x3
   466  0073                     	ds	4
   467                           
   468                           	psect	cstackBANK0
   469  0043                     __pcstackBANK0:	
   470  0043                     ??_ADC_Initialization:	
   471  0043                     ??_Pin_Manager:	
   472                           ; 0 bytes @ 0x0
   473                           
   474  0043                     ??_FVR_Initialization:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0043                     ??_Comp_Initialization:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0043                     ??_DAC_Initialization:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0043                     ??_CCP_Initialization:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0043                     ??_CWG_Initialization:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0043                     ??_SMT_Initialization:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0043                     ??_TMR1_Initialization:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0043                     ??_Int_Initialization:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0043                     ?___wmul:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0043                     ?___ftpack:	
   502                           ; 2 bytes @ 0x0
   503                           
   504  0043                     ?___ltdiv:	
   505                           ; 3 bytes @ 0x0
   506                           
   507  0043                     ?___fttol:	
   508                           ; 3 bytes @ 0x0
   509                           
   510  0043                     ___wmul@multiplier:	
   511                           ; 4 bytes @ 0x0
   512                           
   513  0043                     ___ftpack@arg:	
   514                           ; 2 bytes @ 0x0
   515                           
   516  0043                     ___fttol@f1:	
   517                           ; 3 bytes @ 0x0
   518                           
   519  0043                     ___ltdiv@divisor:	
   520                           ; 3 bytes @ 0x0
   521                           
   522                           
   523                           ; 3 bytes @ 0x0
   524  0043                     	ds	2
   525  0045                     ___wmul@multiplicand:	
   526                           
   527                           ; 2 bytes @ 0x2
   528  0045                     	ds	1
   529  0046                     ___ftpack@exp:	
   530  0046                     ___ltdiv@dividend:	
   531                           ; 1 bytes @ 0x3
   532                           
   533                           
   534                           ; 3 bytes @ 0x3
   535  0046                     	ds	1
   536  0047                     ??___fttol:	
   537  0047                     ??___wmul:	
   538                           ; 0 bytes @ 0x4
   539                           
   540  0047                     ___ftpack@sign:	
   541                           ; 0 bytes @ 0x4
   542                           
   543  0047                     ___wmul@product:	
   544                           ; 1 bytes @ 0x4
   545                           
   546                           
   547                           ; 2 bytes @ 0x4
   548  0047                     	ds	1
   549  0048                     ??___ftpack:	
   550                           
   551                           ; 0 bytes @ 0x5
   552  0048                     	ds	1
   553  0049                     ??___ltdiv:	
   554                           
   555                           ; 0 bytes @ 0x6
   556  0049                     	ds	1
   557  004A                     ___ltdiv@quotient:	
   558                           
   559                           ; 3 bytes @ 0x7
   560  004A                     	ds	1
   561  004B                     ?___awtoft:	
   562  004B                     ___fttol@sign1:	
   563                           ; 3 bytes @ 0x8
   564                           
   565  004B                     ___awtoft@c:	
   566                           ; 1 bytes @ 0x8
   567                           
   568                           
   569                           ; 2 bytes @ 0x8
   570  004B                     	ds	1
   571  004C                     ___fttol@lval:	
   572                           
   573                           ; 4 bytes @ 0x9
   574  004C                     	ds	1
   575  004D                     ___ltdiv@counter:	
   576                           
   577                           ; 1 bytes @ 0xA
   578  004D                     	ds	1
   579  004E                     ??___awtoft:	
   580  004E                     ?___tmul:	
   581                           ; 0 bytes @ 0xB
   582                           
   583  004E                     ___tmul@multiplier:	
   584                           ; 3 bytes @ 0xB
   585                           
   586                           
   587                           ; 3 bytes @ 0xB
   588  004E                     	ds	2
   589  0050                     ___awtoft@sign:	
   590  0050                     ___fttol@exp1:	
   591                           ; 1 bytes @ 0xD
   592                           
   593                           
   594                           ; 1 bytes @ 0xD
   595  0050                     	ds	1
   596  0051                     ??_PWM_Calculation:	
   597  0051                     ??_DesiredSpeed_Calculation:	
   598                           ; 0 bytes @ 0xE
   599                           
   600  0051                     ?___ftmul:	
   601                           ; 0 bytes @ 0xE
   602                           
   603  0051                     ___ftmul@f1:	
   604                           ; 3 bytes @ 0xE
   605                           
   606  0051                     ___tmul@multiplicand:	
   607                           ; 3 bytes @ 0xE
   608                           
   609                           
   610                           ; 3 bytes @ 0xE
   611  0051                     	ds	3
   612  0054                     ??___tmul:	
   613  0054                     ___ftmul@f2:	
   614                           ; 0 bytes @ 0x11
   615                           
   616  0054                     ___tmul@product:	
   617                           ; 3 bytes @ 0x11
   618                           
   619                           
   620                           ; 3 bytes @ 0x11
   621  0054                     	ds	3
   622  0057                     ??___ftmul:	
   623  0057                     ?___lttoft:	
   624                           ; 0 bytes @ 0x14
   625                           
   626  0057                     ___lttoft@c:	
   627                           ; 3 bytes @ 0x14
   628                           
   629                           
   630                           ; 3 bytes @ 0x14
   631  0057                     	ds	3
   632  005A                     ??___lttoft:	
   633                           
   634                           ; 0 bytes @ 0x17
   635  005A                     	ds	1
   636  005B                     ??_Get_ActualSpeed:	
   637  005B                     ___ftmul@exp:	
   638                           ; 0 bytes @ 0x18
   639                           
   640                           
   641                           ; 1 bytes @ 0x18
   642  005B                     	ds	1
   643  005C                     ___ftmul@f3_as_product:	
   644                           
   645                           ; 3 bytes @ 0x19
   646  005C                     	ds	3
   647  005F                     ___ftmul@cntr:	
   648                           
   649                           ; 1 bytes @ 0x1C
   650  005F                     	ds	1
   651  0060                     ___ftmul@sign:	
   652                           
   653                           ; 1 bytes @ 0x1D
   654  0060                     	ds	1
   655  0061                     ??_PI_Calculation:	
   656                           
   657                           ; 0 bytes @ 0x1E
   658  0061                     	ds	2
   659  0063                     ??_main:	
   660                           
   661                           ; 0 bytes @ 0x20
   662  0063                     	ds	1
   663                           
   664                           	psect	maintext
   665  034B                     __pmaintext:	
   666 ;;
   667 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   668 ;;
   669 ;; *************** function _main *****************
   670 ;; Defined at:
   671 ;;		line 164 in file "AN1779_Source_Code_main.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;		None               void
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 17F/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   685 ;;      Params:         0       0       0       0
   686 ;;      Locals:         0       0       0       0
   687 ;;      Temps:          0       1       0       0
   688 ;;      Totals:         0       1       0       0
   689 ;;Total ram usage:        1 bytes
   690 ;; Hardware stack levels required when called:    5
   691 ;; This function calls:
   692 ;;		_ADC_Initialization
   693 ;;		_CCP_Initialization
   694 ;;		_CWG_Initialization
   695 ;;		_Comp_Initialization
   696 ;;		_DAC_Initialization
   697 ;;		_DesiredSpeed_Calculation
   698 ;;		_FVR_Initialization
   699 ;;		_Get_ActualSpeed
   700 ;;		_Int_Initialization
   701 ;;		_PI_Calculation
   702 ;;		_PWM_Calculation
   703 ;;		_Pin_Manager
   704 ;;		_SMT_Initialization
   705 ;;		_TMR1_Initialization
   706 ;; This function is called by:
   707 ;;		Startup code after reset
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _main
   713  034B                     _main:	
   714                           
   715                           ;AN1779_Source_Code_main.c: 166: Pin_Manager();
   716                           
   717                           ;incstack = 0
   718                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   719  034B  24AA               	fcall	_Pin_Manager
   720                           
   721                           ;AN1779_Source_Code_main.c: 167: FVR_Initialization();
   722  034C  2514               	fcall	_FVR_Initialization
   723                           
   724                           ;AN1779_Source_Code_main.c: 168: Comp_Initialization ();
   725  034D  250A               	fcall	_Comp_Initialization
   726                           
   727                           ;AN1779_Source_Code_main.c: 169: DAC_Initialization ();
   728  034E  2521               	fcall	_DAC_Initialization
   729                           
   730                           ;AN1779_Source_Code_main.c: 170: CCP_Initialization ();
   731  034F  24FC               	fcall	_CCP_Initialization
   732                           
   733                           ;AN1779_Source_Code_main.c: 171: CWG_Initialization ();
   734  0350  24BC               	fcall	_CWG_Initialization
   735                           
   736                           ;AN1779_Source_Code_main.c: 172: SMT_Initialization ();
   737  0351  2418               	fcall	_SMT_Initialization
   738                           
   739                           ;AN1779_Source_Code_main.c: 173: TMR1_Initialization();
   740  0352  24DE               	fcall	_TMR1_Initialization
   741                           
   742                           ;AN1779_Source_Code_main.c: 174: Int_Initialization();
   743  0353  252D               	fcall	_Int_Initialization
   744                           
   745                           ;AN1779_Source_Code_main.c: 175: ADC_Initialization();
   746  0354  24CE               	fcall	_ADC_Initialization
   747                           
   748                           ;AN1779_Source_Code_main.c: 177: DutyCycle = 0;
   749  0355  0020               	movlb	0	; select bank0
   750  0356  01AF               	clrf	_DutyCycle
   751  0357  01B0               	clrf	_DutyCycle+1
   752                           
   753                           ;AN1779_Source_Code_main.c: 178: PIValue = 0;
   754  0358  01B3               	clrf	_PIValue
   755  0359  01B4               	clrf	_PIValue+1
   756                           
   757                           ;AN1779_Source_Code_main.c: 179: SpeedError = 0;
   758  035A  01BB               	clrf	_SpeedError
   759  035B  01BC               	clrf	_SpeedError+1
   760                           
   761                           ;AN1779_Source_Code_main.c: 180: SpeedIntegral = 0;
   762  035C  01BD               	clrf	_SpeedIntegral
   763  035D  01BE               	clrf	_SpeedIntegral+1
   764                           
   765                           ;AN1779_Source_Code_main.c: 182: CWG1CON0bits.CWG1EN = 1;
   766  035E  002D               	movlb	13	; select bank13
   767  035F  1796               	bsf	22,7	;volatile
   768                           
   769                           ;AN1779_Source_Code_main.c: 183: T2CONbits.TMR2ON = 1;
   770  0360  0020               	movlb	0	; select bank0
   771  0361  179C               	bsf	28,7	;volatile
   772                           
   773                           ;AN1779_Source_Code_main.c: 184: T1CONbits.TMR1ON = 1;
   774  0362  1418               	bsf	24,0	;volatile
   775                           
   776                           ;AN1779_Source_Code_main.c: 185: SMT1CON1bits.SMT1GO = 1;
   777  0363  003B               	movlb	27	; select bank27
   778  0364  1799               	bsf	25,7	;volatile
   779  0365                     l1811:	
   780                           ;AN1779_Source_Code_main.c: 187: while(1)
   781                           
   782                           
   783                           ;AN1779_Source_Code_main.c: 188: {
   784                           ;AN1779_Source_Code_main.c: 189: ADCON0bits.ADON = 1;
   785  0365  0021               	movlb	1	; select bank1
   786  0366  141D               	bsf	29,0	;volatile
   787                           
   788                           ;AN1779_Source_Code_main.c: 190: ADCON0bits.GO = 1;
   789  0367  149D               	bsf	29,1	;volatile
   790                           
   791                           ;AN1779_Source_Code_main.c: 191: _delay((unsigned long)((300)*(16000000/4000000.0)));
   792  0368  30EF               	movlw	239
   793  0369  0020               	movlb	0	; select bank0
   794  036A  00E3               	movwf	??_main
   795  036B                     u1367:	
   796  036B  2B6C               	nop2
   797  036C  0BE3               	decfsz	??_main,f
   798  036D  2B6B               	goto	u1367
   799  036E  2B6F               	nop2	;nop
   800  036F  2B70               	nop2	;nop
   801  0370                     l198:	
   802                           ;AN1779_Source_Code_main.c: 194: {
   803                           
   804                           ;AN1779_Source_Code_main.c: 193: while(ADCON0bits.GO)
   805                           
   806  0370  0021               	movlb	1	; select bank1
   807  0371  189D               	btfsc	29,1	;volatile
   808  0372  2B70               	goto	l198
   809                           
   810                           ;AN1779_Source_Code_main.c: 195: }
   811                           ;AN1779_Source_Code_main.c: 196: ADCValue = ADRES;
   812  0373  081C               	movf	28,w	;volatile
   813  0374  0020               	movlb	0	; select bank0
   814  0375  01C2               	clrf	_ADCValue+1
   815  0376  07C2               	addwf	_ADCValue+1,f
   816  0377  0021               	movlb	1	; select bank1
   817  0378  081B               	movf	27,w	;volatile
   818  0379  0020               	movlb	0	; select bank0
   819  037A  01C1               	clrf	_ADCValue
   820  037B  07C1               	addwf	_ADCValue,f
   821                           
   822                           ;AN1779_Source_Code_main.c: 198: PWM_Calculation();
   823  037C  22AB               	fcall	_PWM_Calculation
   824                           
   825                           ;AN1779_Source_Code_main.c: 199: DesiredSpeed_Calculation();
   826  037D  2479               	fcall	_DesiredSpeed_Calculation
   827                           
   828                           ;AN1779_Source_Code_main.c: 200: Get_ActualSpeed ();
   829  037E  238F               	fcall	_Get_ActualSpeed
   830                           
   831                           ;AN1779_Source_Code_main.c: 201: PI_Calculation();
   832  037F  2138               	fcall	_PI_Calculation
   833                           
   834                           ;AN1779_Source_Code_main.c: 203: PORTAbits.RA3 = 0;
   835  0380  0020               	movlb	0	; select bank0
   836  0381  118C               	bcf	12,3	;volatile
   837                           
   838                           ;AN1779_Source_Code_main.c: 204: PORTAbits.RA2 = 0;
   839  0382  110C               	bcf	12,2	;volatile
   840                           
   841                           ;AN1779_Source_Code_main.c: 205: PORTAbits.RA1 = 1;
   842  0383  148C               	bsf	12,1	;volatile
   843                           
   844                           ;AN1779_Source_Code_main.c: 207: if(TMR2IF)
   845  0384  1891               	btfsc	17,1	;volatile
   846                           
   847                           ;AN1779_Source_Code_main.c: 208: TMR2IF = 0;
   848  0385  1091               	bcf	17,1	;volatile
   849                           
   850                           ;AN1779_Source_Code_main.c: 210: if (CMOUTbits.MC1OUT)
   851  0386  0022               	movlb	2	; select bank2
   852  0387  1C15               	btfss	21,0	;volatile
   853  0388  2B8C               	goto	l202
   854                           
   855                           ;AN1779_Source_Code_main.c: 211: CWG1CON0bits.CWG1MODE0 = 0;
   856  0389  002D               	movlb	13	; select bank13
   857  038A  1016               	bcf	22,0	;volatile
   858  038B  2B65               	goto	l1811
   859  038C                     l202:	
   860                           
   861                           ;AN1779_Source_Code_main.c: 212: else
   862                           ;AN1779_Source_Code_main.c: 213: CWG1CON0bits.CWG1MODE0 = 1;
   863  038C  002D               	movlb	13	; select bank13
   864  038D  1416               	bsf	22,0	;volatile
   865  038E  2B65               	goto	l1811
   866  038F                     __end_of_main:	
   867                           
   868                           	psect	text1
   869  04DE                     __ptext1:	
   870 ;; *************** function _TMR1_Initialization *****************
   871 ;; Defined at:
   872 ;;		line 415 in file "AN1779_Source_Code_main.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;		None               void
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   886 ;;      Params:         0       0       0       0
   887 ;;      Locals:         0       0       0       0
   888 ;;      Temps:          0       0       0       0
   889 ;;      Totals:         0       0       0       0
   890 ;;Total ram usage:        0 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    2
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _TMR1_Initialization
   902  04DE                     _TMR1_Initialization:	
   903                           
   904                           ;AN1779_Source_Code_main.c: 417: T1CON = 0b00110000;
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in _TMR1_Initialization: [wreg+status,2+status,0]
   908  04DE  3030               	movlw	48
   909  04DF  0020               	movlb	0	; select bank0
   910  04E0  0098               	movwf	24	;volatile
   911                           
   912                           ;AN1779_Source_Code_main.c: 418: T1GCON = 0x00;
   913  04E1  0199               	clrf	25	;volatile
   914                           
   915                           ;AN1779_Source_Code_main.c: 419: TMR1H = 0x3C;
   916  04E2  303C               	movlw	60
   917  04E3  0097               	movwf	23	;volatile
   918                           
   919                           ;AN1779_Source_Code_main.c: 420: TMR1L = 0xAF;
   920  04E4  30AF               	movlw	175
   921  04E5  0096               	movwf	22	;volatile
   922                           
   923                           ;AN1779_Source_Code_main.c: 421: Timer1ReloadVal=TMR1;
   924  04E6  0817               	movf	23,w	;volatile
   925  04E7  01FB               	clrf	_Timer1ReloadVal+1
   926  04E8  07FB               	addwf	_Timer1ReloadVal+1,f
   927  04E9  0816               	movf	22,w	;volatile
   928  04EA  01FA               	clrf	_Timer1ReloadVal
   929  04EB  07FA               	addwf	_Timer1ReloadVal,f
   930  04EC  0008               	return
   931  04ED                     __end_of_TMR1_Initialization:	
   932                           
   933                           	psect	text2
   934  0418                     __ptext2:	
   935 ;; *************** function _SMT_Initialization *****************
   936 ;; Defined at:
   937 ;;		line 397 in file "AN1779_Source_Code_main.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;		None               void
   944 ;; Registers used:
   945 ;;		wreg
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   951 ;;      Params:         0       0       0       0
   952 ;;      Locals:         0       0       0       0
   953 ;;      Temps:          0       0       0       0
   954 ;;      Totals:         0       0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    2
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_main
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _SMT_Initialization
   967  0418                     _SMT_Initialization:	
   968                           
   969                           ;AN1779_Source_Code_main.c: 399: SMT1CON0 = 0b10000000;
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _SMT_Initialization: [wreg]
   973  0418  3080               	movlw	128
   974  0419  003B               	movlb	27	; select bank27
   975  041A  0098               	movwf	24	;volatile
   976                           
   977                           ;AN1779_Source_Code_main.c: 400: SMT1CON1 = 0b01000010;
   978  041B  3042               	movlw	66
   979  041C  0099               	movwf	25	;volatile
   980                           
   981                           ;AN1779_Source_Code_main.c: 401: SMT1SIG = 0b00000001;
   982  041D  3001               	movlw	1
   983  041E  009C               	movwf	28	;volatile
   984                           
   985                           ;AN1779_Source_Code_main.c: 402: SMT1CLK = 0b00000011;
   986  041F  3003               	movlw	3
   987  0420  009B               	movwf	27	;volatile
   988                           
   989                           ;AN1779_Source_Code_main.c: 404: SMT1TMR = 0x000000;
   990  0421  3000               	movlw	0
   991  0422  008C               	movwf	12	;volatile
   992  0423  3000               	movlw	0
   993  0424  008D               	movwf	13	;volatile
   994  0425  3000               	movlw	0
   995  0426  008E               	movwf	14	;volatile
   996                           
   997                           ;AN1779_Source_Code_main.c: 405: SMT1CPR = 0x000000;
   998  0427  3000               	movlw	0
   999  0428  008F               	movwf	15	;volatile
  1000  0429  3000               	movlw	0
  1001  042A  0090               	movwf	16	;volatile
  1002  042B  3000               	movlw	0
  1003  042C  0091               	movwf	17	;volatile
  1004                           
  1005                           ;AN1779_Source_Code_main.c: 406: SMT1CPW = 0x000000;
  1006  042D  3000               	movlw	0
  1007  042E  0092               	movwf	18	;volatile
  1008  042F  3000               	movlw	0
  1009  0430  0093               	movwf	19	;volatile
  1010  0431  3000               	movlw	0
  1011  0432  0094               	movwf	20	;volatile
  1012                           
  1013                           ;AN1779_Source_Code_main.c: 407: SMT1PR = 0x000000;
  1014  0433  3000               	movlw	0
  1015  0434  0095               	movwf	21	;volatile
  1016  0435  3000               	movlw	0
  1017  0436  0096               	movwf	22	;volatile
  1018  0437  3000               	movlw	0
  1019  0438  0097               	movwf	23	;volatile
  1020  0439  0008               	return
  1021  043A                     __end_of_SMT_Initialization:	
  1022                           
  1023                           	psect	text3
  1024  04AA                     __ptext3:	
  1025 ;; *************** function _Pin_Manager *****************
  1026 ;; Defined at:
  1027 ;;		line 228 in file "AN1779_Source_Code_main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;		None               void
  1034 ;; Registers used:
  1035 ;;		wreg, status,2
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1041 ;;      Params:         0       0       0       0
  1042 ;;      Locals:         0       0       0       0
  1043 ;;      Temps:          0       0       0       0
  1044 ;;      Totals:         0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    2
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _Pin_Manager
  1057  04AA                     _Pin_Manager:	
  1058                           
  1059                           ;AN1779_Source_Code_main.c: 230: OSCCON = 0b01111000;
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _Pin_Manager: [wreg+status,2]
  1063  04AA  3078               	movlw	120
  1064  04AB  0021               	movlb	1	; select bank1
  1065  04AC  0099               	movwf	25	;volatile
  1066                           
  1067                           ;AN1779_Source_Code_main.c: 231: LATA = 0b00000000;
  1068  04AD  0022               	movlb	2	; select bank2
  1069  04AE  018C               	clrf	12	;volatile
  1070                           
  1071                           ;AN1779_Source_Code_main.c: 232: TRISA = 0b00010001;
  1072  04AF  3011               	movlw	17
  1073  04B0  0021               	movlb	1	; select bank1
  1074  04B1  008C               	movwf	12	;volatile
  1075                           
  1076                           ;AN1779_Source_Code_main.c: 233: ANSELA = 0b00010000;
  1077  04B2  3010               	movlw	16
  1078  04B3  0023               	movlb	3	; select bank3
  1079  04B4  008C               	movwf	12	;volatile
  1080                           
  1081                           ;AN1779_Source_Code_main.c: 234: TRISC = 0b00000010;
  1082  04B5  3002               	movlw	2
  1083  04B6  0021               	movlb	1	; select bank1
  1084  04B7  008E               	movwf	14	;volatile
  1085                           
  1086                           ;AN1779_Source_Code_main.c: 235: ANSELC = 0b00000010;
  1087  04B8  3002               	movlw	2
  1088  04B9  0023               	movlb	3	; select bank3
  1089  04BA  008E               	movwf	14	;volatile
  1090  04BB  0008               	return
  1091  04BC                     __end_of_Pin_Manager:	
  1092                           
  1093                           	psect	text4
  1094  02AB                     __ptext4:	
  1095 ;; *************** function _PWM_Calculation *****************
  1096 ;; Defined at:
  1097 ;;		line 437 in file "AN1779_Source_Code_main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1111 ;;      Params:         0       0       0       0
  1112 ;;      Locals:         0       0       0       0
  1113 ;;      Temps:          0       0       0       0
  1114 ;;      Totals:         0       0       0       0
  1115 ;;Total ram usage:        0 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    4
  1118 ;; This function calls:
  1119 ;;		___awtoft
  1120 ;;		___fttol
  1121 ;;		___wmul
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _PWM_Calculation
  1129  02AB                     _PWM_Calculation:	
  1130                           
  1131                           ;AN1779_Source_Code_main.c: 439: PWMResult = (5/9)*ADCValue;
  1132                           
  1133                           ;incstack = 0
  1134                           ; Regs used in _PWM_Calculation: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1135  02AB  0020               	movlb	0	; select bank0
  1136  02AC  0842               	movf	_ADCValue+1,w
  1137  02AD  01C4               	clrf	___wmul@multiplier+1
  1138  02AE  07C4               	addwf	___wmul@multiplier+1,f
  1139  02AF  0841               	movf	_ADCValue,w
  1140  02B0  01C3               	clrf	___wmul@multiplier
  1141  02B1  07C3               	addwf	___wmul@multiplier,f
  1142  02B2  3000               	movlw	0
  1143  02B3  00C5               	movwf	___wmul@multiplicand
  1144  02B4  3000               	movlw	0
  1145  02B5  00C6               	movwf	___wmul@multiplicand+1
  1146  02B6  245B               	fcall	___wmul
  1147  02B7  0020               	movlb	0	; select bank0
  1148  02B8  0844               	movf	?___wmul+1,w
  1149  02B9  01CC               	clrf	___awtoft@c+1
  1150  02BA  07CC               	addwf	___awtoft@c+1,f
  1151  02BB  0843               	movf	?___wmul,w
  1152  02BC  01CB               	clrf	___awtoft@c
  1153  02BD  07CB               	addwf	___awtoft@c,f
  1154  02BE  243A               	fcall	___awtoft
  1155  02BF  0020               	movlb	0	; select bank0
  1156  02C0  084B               	movf	?___awtoft,w
  1157  02C1  00A3               	movwf	_PWMResult
  1158  02C2  084C               	movf	?___awtoft+1,w
  1159  02C3  00A4               	movwf	_PWMResult+1
  1160  02C4  084D               	movf	?___awtoft+2,w
  1161  02C5  00A5               	movwf	_PWMResult+2
  1162                           
  1163                           ;AN1779_Source_Code_main.c: 440: PWMValue = (int)PWMResult;
  1164  02C6  0823               	movf	_PWMResult,w
  1165  02C7  00C3               	movwf	___fttol@f1
  1166  02C8  0824               	movf	_PWMResult+1,w
  1167  02C9  00C4               	movwf	___fttol@f1+1
  1168  02CA  0825               	movf	_PWMResult+2,w
  1169  02CB  00C5               	movwf	___fttol@f1+2
  1170  02CC  21C3               	fcall	___fttol
  1171  02CD  0020               	movlb	0	; select bank0
  1172  02CE  0844               	movf	?___fttol+1,w
  1173  02CF  01B6               	clrf	_PWMValue+1
  1174  02D0  07B6               	addwf	_PWMValue+1,f
  1175  02D1  0843               	movf	?___fttol,w
  1176  02D2  01B5               	clrf	_PWMValue
  1177  02D3  07B5               	addwf	_PWMValue,f
  1178                           
  1179                           ;AN1779_Source_Code_main.c: 442: DutyCycle = PWMValue + PIValue;
  1180  02D4  0833               	movf	_PIValue,w
  1181  02D5  0735               	addwf	_PWMValue,w
  1182  02D6  00AF               	movwf	_DutyCycle
  1183  02D7  0834               	movf	_PIValue+1,w
  1184  02D8  3D36               	addwfc	_PWMValue+1,w
  1185  02D9  00B0               	movwf	_DutyCycle+1
  1186                           
  1187                           ;AN1779_Source_Code_main.c: 443: CCPR1 = DutyCycle;
  1188  02DA  0830               	movf	_DutyCycle+1,w
  1189  02DB  0025               	movlb	5	; select bank5
  1190  02DC  0192               	clrf	18	;volatile
  1191  02DD  0792               	addwf	18,f	;volatile
  1192  02DE  0020               	movlb	0	; select bank0
  1193  02DF  082F               	movf	_DutyCycle,w
  1194  02E0  0025               	movlb	5	; select bank5
  1195  02E1  0191               	clrf	17	;volatile
  1196  02E2  0791               	addwf	17,f	;volatile
  1197                           
  1198                           ;AN1779_Source_Code_main.c: 445: if (DutyCycle > 1023)
  1199  02E3  0020               	movlb	0	; select bank0
  1200  02E4  0830               	movf	_DutyCycle+1,w
  1201  02E5  3A80               	xorlw	128
  1202  02E6  00FF               	movwf	127
  1203  02E7  3084               	movlw	132
  1204  02E8  027F               	subwf	127,w
  1205  02E9  1D03               	skipz
  1206  02EA  2AED               	goto	u1265
  1207  02EB  3000               	movlw	0
  1208  02EC  022F               	subwf	_DutyCycle,w
  1209  02ED                     u1265:	
  1210  02ED  1C03               	skipc
  1211  02EE  2AF4               	goto	l1911
  1212                           
  1213                           ;AN1779_Source_Code_main.c: 446: {
  1214                           ;AN1779_Source_Code_main.c: 447: CCPR1 = 1023;
  1215  02EF  3003               	movlw	3
  1216  02F0  0025               	movlb	5	; select bank5
  1217  02F1  0092               	movwf	18	;volatile
  1218  02F2  30FF               	movlw	255
  1219  02F3  0091               	movwf	17	;volatile
  1220  02F4                     l1911:	
  1221                           
  1222                           ;AN1779_Source_Code_main.c: 448: }
  1223                           ;AN1779_Source_Code_main.c: 449: if (DutyCycle < 110)
  1224  02F4  0020               	movlb	0	; select bank0
  1225  02F5  0830               	movf	_DutyCycle+1,w
  1226  02F6  3A80               	xorlw	128
  1227  02F7  00FF               	movwf	127
  1228  02F8  3080               	movlw	128
  1229  02F9  027F               	subwf	127,w
  1230  02FA  1D03               	skipz
  1231  02FB  2AFE               	goto	u1275
  1232  02FC  306E               	movlw	110
  1233  02FD  022F               	subwf	_DutyCycle,w
  1234  02FE                     u1275:	
  1235  02FE  1803               	skipnc
  1236  02FF  0008               	return
  1237                           
  1238                           ;AN1779_Source_Code_main.c: 450: {
  1239                           ;AN1779_Source_Code_main.c: 451: CCPR1 = 110;
  1240  0300  3000               	movlw	0
  1241  0301  0025               	movlb	5	; select bank5
  1242  0302  0092               	movwf	18	;volatile
  1243  0303  306E               	movlw	110
  1244  0304  0091               	movwf	17	;volatile
  1245  0305  0008               	return
  1246  0306                     __end_of_PWM_Calculation:	
  1247                           
  1248                           	psect	text5
  1249  045B                     __ptext5:	
  1250 ;; *************** function ___wmul *****************
  1251 ;; Defined at:
  1252 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1255 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  product         2    4[BANK0 ] unsigned int 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2    0[BANK0 ] unsigned int 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1267 ;;      Params:         0       4       0       0
  1268 ;;      Locals:         0       2       0       0
  1269 ;;      Temps:          0       0       0       0
  1270 ;;      Totals:         0       6       0       0
  1271 ;;Total ram usage:        6 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    2
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_PWM_Calculation
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function ___wmul
  1283  045B                     ___wmul:	
  1284                           
  1285                           ;incstack = 0
  1286                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1287  045B  0020               	movlb	0	; select bank0
  1288  045C  01C7               	clrf	___wmul@product
  1289  045D  01C8               	clrf	___wmul@product+1
  1290  045E                     l1935:	
  1291  045E  1C43               	btfss	___wmul@multiplier,0
  1292  045F  2C64               	goto	l615
  1293  0460  0845               	movf	___wmul@multiplicand,w
  1294  0461  07C7               	addwf	___wmul@product,f
  1295  0462  0846               	movf	___wmul@multiplicand+1,w
  1296  0463  3DC8               	addwfc	___wmul@product+1,f
  1297  0464                     l615:	
  1298  0464  3001               	movlw	1
  1299  0465                     u1335:	
  1300  0465  35C5               	lslf	___wmul@multiplicand,f
  1301  0466  0DC6               	rlf	___wmul@multiplicand+1,f
  1302  0467  0B89               	decfsz	9,f
  1303  0468  2C65               	goto	u1335
  1304  0469  3001               	movlw	1
  1305  046A                     u1345:	
  1306  046A  36C4               	lsrf	___wmul@multiplier+1,f
  1307  046B  0CC3               	rrf	___wmul@multiplier,f
  1308  046C  0B89               	decfsz	9,f
  1309  046D  2C6A               	goto	u1345
  1310  046E  0844               	movf	___wmul@multiplier+1,w
  1311  046F  0443               	iorwf	___wmul@multiplier,w
  1312  0470  1D03               	skipz
  1313  0471  2C5E               	goto	l1935
  1314  0472  0848               	movf	___wmul@product+1,w
  1315  0473  01C4               	clrf	?___wmul+1
  1316  0474  07C4               	addwf	?___wmul+1,f
  1317  0475  0847               	movf	___wmul@product,w
  1318  0476  01C3               	clrf	?___wmul
  1319  0477  07C3               	addwf	?___wmul,f
  1320  0478  0008               	return
  1321  0479                     __end_of___wmul:	
  1322                           
  1323                           	psect	text6
  1324  0138                     __ptext6:	
  1325 ;; *************** function _PI_Calculation *****************
  1326 ;; Defined at:
  1327 ;;		line 491 in file "AN1779_Source_Code_main.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;		None               void
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1341 ;;      Params:         0       0       0       0
  1342 ;;      Locals:         0       0       0       0
  1343 ;;      Temps:          0       2       0       0
  1344 ;;      Totals:         0       2       0       0
  1345 ;;Total ram usage:        2 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    4
  1348 ;; This function calls:
  1349 ;;		___awtoft
  1350 ;;		___ftmul
  1351 ;;		___fttol
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _PI_Calculation
  1359  0138                     _PI_Calculation:	
  1360                           
  1361                           ;AN1779_Source_Code_main.c: 493: SpeedError = SpeedReference - SpeedActual;
  1362                           
  1363                           ;incstack = 0
  1364                           ; Regs used in _PI_Calculation: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1365  0138  0020               	movlb	0	; select bank0
  1366  0139  0939               	comf	_SpeedActual,w
  1367  013A  00E1               	movwf	??_PI_Calculation
  1368  013B  093A               	comf	_SpeedActual+1,w
  1369  013C  00E2               	movwf	??_PI_Calculation+1
  1370  013D  0AE1               	incf	??_PI_Calculation,f
  1371  013E  1903               	skipnz
  1372  013F  0AE2               	incf	??_PI_Calculation+1,f
  1373  0140  083F               	movf	_SpeedReference,w
  1374  0141  0761               	addwf	??_PI_Calculation,w
  1375  0142  00BB               	movwf	_SpeedError
  1376  0143  0840               	movf	_SpeedReference+1,w
  1377  0144  3D62               	addwfc	??_PI_Calculation+1,w
  1378  0145  00BC               	movwf	_SpeedError+1
  1379                           
  1380                           ;AN1779_Source_Code_main.c: 494: SpeedIntegral += SpeedError;
  1381  0146  083B               	movf	_SpeedError,w
  1382  0147  07BD               	addwf	_SpeedIntegral,f
  1383  0148  083C               	movf	_SpeedError+1,w
  1384  0149  3DBE               	addwfc	_SpeedIntegral+1,f
  1385                           
  1386                           ;AN1779_Source_Code_main.c: 496: if (SpeedIntegral > 5000)
  1387  014A  083E               	movf	_SpeedIntegral+1,w
  1388  014B  3A80               	xorlw	128
  1389  014C  00FF               	movwf	127
  1390  014D  3093               	movlw	147
  1391  014E  027F               	subwf	127,w
  1392  014F  1D03               	skipz
  1393  0150  2953               	goto	u675
  1394  0151  3089               	movlw	137
  1395  0152  023D               	subwf	_SpeedIntegral,w
  1396  0153                     u675:	
  1397  0153  1C03               	skipc
  1398  0154  2958               	goto	l1493
  1399                           
  1400                           ;AN1779_Source_Code_main.c: 497: SpeedIntegral = 0;
  1401  0155  0020               	movlb	0	; select bank0
  1402  0156  01BD               	clrf	_SpeedIntegral
  1403  0157  01BE               	clrf	_SpeedIntegral+1
  1404  0158                     l1493:	
  1405                           
  1406                           ;AN1779_Source_Code_main.c: 498: if (SpeedIntegral < -5000)
  1407  0158  0020               	movlb	0	; select bank0
  1408  0159  083E               	movf	_SpeedIntegral+1,w
  1409  015A  3A80               	xorlw	128
  1410  015B  00FF               	movwf	127
  1411  015C  306C               	movlw	108
  1412  015D  027F               	subwf	127,w
  1413  015E  1D03               	skipz
  1414  015F  2962               	goto	u685
  1415  0160  3078               	movlw	120
  1416  0161  023D               	subwf	_SpeedIntegral,w
  1417  0162                     u685:	
  1418  0162  1803               	skipnc
  1419  0163  2967               	goto	l1497
  1420                           
  1421                           ;AN1779_Source_Code_main.c: 499: SpeedIntegral = 0;
  1422  0164  0020               	movlb	0	; select bank0
  1423  0165  01BD               	clrf	_SpeedIntegral
  1424  0166  01BE               	clrf	_SpeedIntegral+1
  1425  0167                     l1497:	
  1426                           
  1427                           ;AN1779_Source_Code_main.c: 501: PropOut = SpeedError*0.1;
  1428  0167  30CD               	movlw	205
  1429  0168  0020               	movlb	0	; select bank0
  1430  0169  00D1               	movwf	___ftmul@f1
  1431  016A  30CC               	movlw	204
  1432  016B  00D2               	movwf	___ftmul@f1+1
  1433  016C  303D               	movlw	61
  1434  016D  00D3               	movwf	___ftmul@f1+2
  1435  016E  083C               	movf	_SpeedError+1,w
  1436  016F  01CC               	clrf	___awtoft@c+1
  1437  0170  07CC               	addwf	___awtoft@c+1,f
  1438  0171  083B               	movf	_SpeedError,w
  1439  0172  01CB               	clrf	___awtoft@c
  1440  0173  07CB               	addwf	___awtoft@c,f
  1441  0174  243A               	fcall	___awtoft
  1442  0175  0020               	movlb	0	; select bank0
  1443  0176  084B               	movf	?___awtoft,w
  1444  0177  00D4               	movwf	___ftmul@f2
  1445  0178  084C               	movf	?___awtoft+1,w
  1446  0179  00D5               	movwf	___ftmul@f2+1
  1447  017A  084D               	movf	?___awtoft+2,w
  1448  017B  00D6               	movwf	___ftmul@f2+2
  1449  017C  2085               	fcall	___ftmul
  1450  017D  0020               	movlb	0	; select bank0
  1451  017E  0851               	movf	?___ftmul,w
  1452  017F  00A6               	movwf	_PropOut
  1453  0180  0852               	movf	?___ftmul+1,w
  1454  0181  00A7               	movwf	_PropOut+1
  1455  0182  0853               	movf	?___ftmul+2,w
  1456  0183  00A8               	movwf	_PropOut+2
  1457                           
  1458                           ;AN1779_Source_Code_main.c: 502: PropValue = (int) PropOut;
  1459  0184  0826               	movf	_PropOut,w
  1460  0185  00C3               	movwf	___fttol@f1
  1461  0186  0827               	movf	_PropOut+1,w
  1462  0187  00C4               	movwf	___fttol@f1+1
  1463  0188  0828               	movf	_PropOut+2,w
  1464  0189  00C5               	movwf	___fttol@f1+2
  1465  018A  21C3               	fcall	___fttol
  1466  018B  0020               	movlb	0	; select bank0
  1467  018C  0844               	movf	?___fttol+1,w
  1468  018D  01B8               	clrf	_PropValue+1
  1469  018E  07B8               	addwf	_PropValue+1,f
  1470  018F  0843               	movf	?___fttol,w
  1471  0190  01B7               	clrf	_PropValue
  1472  0191  07B7               	addwf	_PropValue,f
  1473                           
  1474                           ;AN1779_Source_Code_main.c: 503: IntegOut = SpeedIntegral*0.05;
  1475  0192  30CD               	movlw	205
  1476  0193  00D1               	movwf	___ftmul@f1
  1477  0194  304C               	movlw	76
  1478  0195  00D2               	movwf	___ftmul@f1+1
  1479  0196  303D               	movlw	61
  1480  0197  00D3               	movwf	___ftmul@f1+2
  1481  0198  083E               	movf	_SpeedIntegral+1,w
  1482  0199  01CC               	clrf	___awtoft@c+1
  1483  019A  07CC               	addwf	___awtoft@c+1,f
  1484  019B  083D               	movf	_SpeedIntegral,w
  1485  019C  01CB               	clrf	___awtoft@c
  1486  019D  07CB               	addwf	___awtoft@c,f
  1487  019E  243A               	fcall	___awtoft
  1488  019F  0020               	movlb	0	; select bank0
  1489  01A0  084B               	movf	?___awtoft,w
  1490  01A1  00D4               	movwf	___ftmul@f2
  1491  01A2  084C               	movf	?___awtoft+1,w
  1492  01A3  00D5               	movwf	___ftmul@f2+1
  1493  01A4  084D               	movf	?___awtoft+2,w
  1494  01A5  00D6               	movwf	___ftmul@f2+2
  1495  01A6  2085               	fcall	___ftmul
  1496  01A7  0020               	movlb	0	; select bank0
  1497  01A8  0851               	movf	?___ftmul,w
  1498  01A9  00A0               	movwf	_IntegOut
  1499  01AA  0852               	movf	?___ftmul+1,w
  1500  01AB  00A1               	movwf	_IntegOut+1
  1501  01AC  0853               	movf	?___ftmul+2,w
  1502  01AD  00A2               	movwf	_IntegOut+2
  1503                           
  1504                           ;AN1779_Source_Code_main.c: 504: IntegValue = (int) IntegOut;
  1505  01AE  0820               	movf	_IntegOut,w
  1506  01AF  00C3               	movwf	___fttol@f1
  1507  01B0  0821               	movf	_IntegOut+1,w
  1508  01B1  00C4               	movwf	___fttol@f1+1
  1509  01B2  0822               	movf	_IntegOut+2,w
  1510  01B3  00C5               	movwf	___fttol@f1+2
  1511  01B4  21C3               	fcall	___fttol
  1512  01B5  0020               	movlb	0	; select bank0
  1513  01B6  0844               	movf	?___fttol+1,w
  1514  01B7  01B2               	clrf	_IntegValue+1
  1515  01B8  07B2               	addwf	_IntegValue+1,f
  1516  01B9  0843               	movf	?___fttol,w
  1517  01BA  01B1               	clrf	_IntegValue
  1518  01BB  07B1               	addwf	_IntegValue,f
  1519                           
  1520                           ;AN1779_Source_Code_main.c: 505: PIValue = PropValue + IntegValue;
  1521  01BC  0831               	movf	_IntegValue,w
  1522  01BD  0737               	addwf	_PropValue,w
  1523  01BE  00B3               	movwf	_PIValue
  1524  01BF  0832               	movf	_IntegValue+1,w
  1525  01C0  3D38               	addwfc	_PropValue+1,w
  1526  01C1  00B4               	movwf	_PIValue+1
  1527  01C2  0008               	return
  1528  01C3                     __end_of_PI_Calculation:	
  1529                           
  1530                           	psect	text7
  1531  0085                     __ptext7:	
  1532 ;; *************** function ___ftmul *****************
  1533 ;; Defined at:
  1534 ;;		line 51 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ftmul.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  f1              3   14[BANK0 ] float 
  1537 ;;  f2              3   17[BANK0 ] float 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  1540 ;;  sign            1   29[BANK0 ] unsigned char 
  1541 ;;  cntr            1   28[BANK0 ] unsigned char 
  1542 ;;  exp             1   24[BANK0 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  3   14[BANK0 ] float 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1552 ;;      Params:         0       6       0       0
  1553 ;;      Locals:         0       6       0       0
  1554 ;;      Temps:          0       4       0       0
  1555 ;;      Totals:         0      16       0       0
  1556 ;;Total ram usage:       16 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    3
  1559 ;; This function calls:
  1560 ;;		___ftpack
  1561 ;; This function is called by:
  1562 ;;		_PI_Calculation
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function ___ftmul
  1568  0085                     ___ftmul:	
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1572  0085  0020               	movlb	0	; select bank0
  1573  0086  0851               	movf	___ftmul@f1,w
  1574  0087  00D7               	movwf	??___ftmul
  1575  0088  0852               	movf	___ftmul@f1+1,w
  1576  0089  00D8               	movwf	??___ftmul+1
  1577  008A  0853               	movf	___ftmul@f1+2,w
  1578  008B  00D9               	movwf	??___ftmul+2
  1579  008C  1003               	clrc
  1580  008D  0D58               	rlf	??___ftmul+1,w
  1581  008E  0D59               	rlf	??___ftmul+2,w
  1582  008F  00DA               	movwf	??___ftmul+3
  1583  0090  085A               	movf	??___ftmul+3,w
  1584  0091  00DB               	movwf	___ftmul@exp
  1585  0092  08DB               	movf	___ftmul@exp,f
  1586  0093  1D03               	skipz
  1587  0094  289C               	goto	l1555
  1588  0095  3000               	movlw	0
  1589  0096  00D1               	movwf	?___ftmul
  1590  0097  3000               	movlw	0
  1591  0098  00D2               	movwf	?___ftmul+1
  1592  0099  3000               	movlw	0
  1593  009A  00D3               	movwf	?___ftmul+2
  1594  009B  0008               	return
  1595  009C                     l1555:	
  1596  009C  0854               	movf	___ftmul@f2,w
  1597  009D  00D7               	movwf	??___ftmul
  1598  009E  0855               	movf	___ftmul@f2+1,w
  1599  009F  00D8               	movwf	??___ftmul+1
  1600  00A0  0856               	movf	___ftmul@f2+2,w
  1601  00A1  00D9               	movwf	??___ftmul+2
  1602  00A2  1003               	clrc
  1603  00A3  0D58               	rlf	??___ftmul+1,w
  1604  00A4  0D59               	rlf	??___ftmul+2,w
  1605  00A5  00DA               	movwf	??___ftmul+3
  1606  00A6  085A               	movf	??___ftmul+3,w
  1607  00A7  00E0               	movwf	___ftmul@sign
  1608  00A8  08E0               	movf	___ftmul@sign,f
  1609  00A9  1D03               	skipz
  1610  00AA  28B2               	goto	l1561
  1611  00AB  3000               	movlw	0
  1612  00AC  00D1               	movwf	?___ftmul
  1613  00AD  3000               	movlw	0
  1614  00AE  00D2               	movwf	?___ftmul+1
  1615  00AF  3000               	movlw	0
  1616  00B0  00D3               	movwf	?___ftmul+2
  1617  00B1  0008               	return
  1618  00B2                     l1561:	
  1619  00B2  0860               	movf	___ftmul@sign,w
  1620  00B3  3E7B               	addlw	123
  1621  00B4  00D7               	movwf	??___ftmul
  1622  00B5  0857               	movf	??___ftmul,w
  1623  00B6  07DB               	addwf	___ftmul@exp,f
  1624  00B7  0851               	movf	___ftmul@f1,w
  1625  00B8  00D7               	movwf	??___ftmul
  1626  00B9  0852               	movf	___ftmul@f1+1,w
  1627  00BA  00D8               	movwf	??___ftmul+1
  1628  00BB  0853               	movf	___ftmul@f1+2,w
  1629  00BC  00D9               	movwf	??___ftmul+2
  1630  00BD  3010               	movlw	16
  1631  00BE                     u835:	
  1632  00BE  36D9               	lsrf	??___ftmul+2,f
  1633  00BF  0CD8               	rrf	??___ftmul+1,f
  1634  00C0  0CD7               	rrf	??___ftmul,f
  1635  00C1  0B89               	decfsz	9,f
  1636  00C2  28BE               	goto	u835
  1637  00C3  0857               	movf	??___ftmul,w
  1638  00C4  00DA               	movwf	??___ftmul+3
  1639  00C5  085A               	movf	??___ftmul+3,w
  1640  00C6  00E0               	movwf	___ftmul@sign
  1641  00C7  0854               	movf	___ftmul@f2,w
  1642  00C8  00D7               	movwf	??___ftmul
  1643  00C9  0855               	movf	___ftmul@f2+1,w
  1644  00CA  00D8               	movwf	??___ftmul+1
  1645  00CB  0856               	movf	___ftmul@f2+2,w
  1646  00CC  00D9               	movwf	??___ftmul+2
  1647  00CD  3010               	movlw	16
  1648  00CE                     u845:	
  1649  00CE  36D9               	lsrf	??___ftmul+2,f
  1650  00CF  0CD8               	rrf	??___ftmul+1,f
  1651  00D0  0CD7               	rrf	??___ftmul,f
  1652  00D1  0B89               	decfsz	9,f
  1653  00D2  28CE               	goto	u845
  1654  00D3  0857               	movf	??___ftmul,w
  1655  00D4  00DA               	movwf	??___ftmul+3
  1656  00D5  085A               	movf	??___ftmul+3,w
  1657  00D6  06E0               	xorwf	___ftmul@sign,f
  1658  00D7  3080               	movlw	128
  1659  00D8  00D7               	movwf	??___ftmul
  1660  00D9  0857               	movf	??___ftmul,w
  1661  00DA  05E0               	andwf	___ftmul@sign,f
  1662  00DB  17D2               	bsf	___ftmul@f1+1,7
  1663  00DC  17D5               	bsf	___ftmul@f2+1,7
  1664  00DD  30FF               	movlw	255
  1665  00DE  05D4               	andwf	___ftmul@f2,f
  1666  00DF  30FF               	movlw	255
  1667  00E0  05D5               	andwf	___ftmul@f2+1,f
  1668  00E1  3000               	movlw	0
  1669  00E2  05D6               	andwf	___ftmul@f2+2,f
  1670  00E3  3000               	movlw	0
  1671  00E4  00DC               	movwf	___ftmul@f3_as_product
  1672  00E5  3000               	movlw	0
  1673  00E6  00DD               	movwf	___ftmul@f3_as_product+1
  1674  00E7  3000               	movlw	0
  1675  00E8  00DE               	movwf	___ftmul@f3_as_product+2
  1676  00E9  3007               	movlw	7
  1677  00EA  00D7               	movwf	??___ftmul
  1678  00EB  0857               	movf	??___ftmul,w
  1679  00EC  00DF               	movwf	___ftmul@cntr
  1680  00ED                     l1573:	
  1681  00ED  1C51               	btfss	___ftmul@f1,0
  1682  00EE  28F5               	goto	l1577
  1683  00EF  0854               	movf	___ftmul@f2,w
  1684  00F0  07DC               	addwf	___ftmul@f3_as_product,f
  1685  00F1  0855               	movf	___ftmul@f2+1,w
  1686  00F2  3DDD               	addwfc	___ftmul@f3_as_product+1,f
  1687  00F3  0856               	movf	___ftmul@f2+2,w
  1688  00F4  3DDE               	addwfc	___ftmul@f3_as_product+2,f
  1689  00F5                     l1577:	
  1690  00F5  3001               	movlw	1
  1691  00F6                     u865:	
  1692  00F6  36D3               	lsrf	___ftmul@f1+2,f
  1693  00F7  0CD2               	rrf	___ftmul@f1+1,f
  1694  00F8  0CD1               	rrf	___ftmul@f1,f
  1695  00F9  0B89               	decfsz	9,f
  1696  00FA  28F6               	goto	u865
  1697  00FB  3001               	movlw	1
  1698  00FC                     u875:	
  1699  00FC  35D4               	lslf	___ftmul@f2,f
  1700  00FD  0DD5               	rlf	___ftmul@f2+1,f
  1701  00FE  0DD6               	rlf	___ftmul@f2+2,f
  1702  00FF  0B89               	decfsz	9,f
  1703  0100  28FC               	goto	u875
  1704  0101  3001               	movlw	1
  1705  0102  02DF               	subwf	___ftmul@cntr,f
  1706  0103  1D03               	btfss	3,2
  1707  0104  28ED               	goto	l1573
  1708  0105  3009               	movlw	9
  1709  0106  00D7               	movwf	??___ftmul
  1710  0107  0857               	movf	??___ftmul,w
  1711  0108  00DF               	movwf	___ftmul@cntr
  1712  0109                     l1585:	
  1713  0109  1C51               	btfss	___ftmul@f1,0
  1714  010A  2911               	goto	l1589
  1715  010B  0854               	movf	___ftmul@f2,w
  1716  010C  07DC               	addwf	___ftmul@f3_as_product,f
  1717  010D  0855               	movf	___ftmul@f2+1,w
  1718  010E  3DDD               	addwfc	___ftmul@f3_as_product+1,f
  1719  010F  0856               	movf	___ftmul@f2+2,w
  1720  0110  3DDE               	addwfc	___ftmul@f3_as_product+2,f
  1721  0111                     l1589:	
  1722  0111  3001               	movlw	1
  1723  0112                     u905:	
  1724  0112  36D3               	lsrf	___ftmul@f1+2,f
  1725  0113  0CD2               	rrf	___ftmul@f1+1,f
  1726  0114  0CD1               	rrf	___ftmul@f1,f
  1727  0115  0B89               	decfsz	9,f
  1728  0116  2912               	goto	u905
  1729  0117  3001               	movlw	1
  1730  0118                     u915:	
  1731  0118  36DE               	lsrf	___ftmul@f3_as_product+2,f
  1732  0119  0CDD               	rrf	___ftmul@f3_as_product+1,f
  1733  011A  0CDC               	rrf	___ftmul@f3_as_product,f
  1734  011B  0B89               	decfsz	9,f
  1735  011C  2918               	goto	u915
  1736  011D  3001               	movlw	1
  1737  011E  02DF               	subwf	___ftmul@cntr,f
  1738  011F  1D03               	btfss	3,2
  1739  0120  2909               	goto	l1585
  1740  0121  085C               	movf	___ftmul@f3_as_product,w
  1741  0122  00C3               	movwf	___ftpack@arg
  1742  0123  085D               	movf	___ftmul@f3_as_product+1,w
  1743  0124  00C4               	movwf	___ftpack@arg+1
  1744  0125  085E               	movf	___ftmul@f3_as_product+2,w
  1745  0126  00C5               	movwf	___ftpack@arg+2
  1746  0127  085B               	movf	___ftmul@exp,w
  1747  0128  00D7               	movwf	??___ftmul
  1748  0129  0857               	movf	??___ftmul,w
  1749  012A  00C6               	movwf	___ftpack@exp
  1750  012B  0860               	movf	___ftmul@sign,w
  1751  012C  00D8               	movwf	??___ftmul+1
  1752  012D  0858               	movf	??___ftmul+1,w
  1753  012E  00C7               	movwf	___ftpack@sign
  1754  012F  224A               	fcall	___ftpack
  1755  0130  0020               	movlb	0	; select bank0
  1756  0131  0843               	movf	?___ftpack,w
  1757  0132  00D1               	movwf	?___ftmul
  1758  0133  0844               	movf	?___ftpack+1,w
  1759  0134  00D2               	movwf	?___ftmul+1
  1760  0135  0845               	movf	?___ftpack+2,w
  1761  0136  00D3               	movwf	?___ftmul+2
  1762  0137  0008               	return
  1763  0138                     __end_of___ftmul:	
  1764                           
  1765                           	psect	text8
  1766  052D                     __ptext8:	
  1767 ;; *************** function _Int_Initialization *****************
  1768 ;; Defined at:
  1769 ;;		line 240 in file "AN1779_Source_Code_main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;		None               void
  1776 ;; Registers used:
  1777 ;;		None
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1783 ;;      Params:         0       0       0       0
  1784 ;;      Locals:         0       0       0       0
  1785 ;;      Temps:          0       0       0       0
  1786 ;;      Totals:         0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    2
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _Int_Initialization
  1799  052D                     _Int_Initialization:	
  1800                           
  1801                           ;AN1779_Source_Code_main.c: 242: INTCONbits.GIE = 1;
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _Int_Initialization: []
  1805  052D  178B               	bsf	11,7	;volatile
  1806                           
  1807                           ;AN1779_Source_Code_main.c: 243: INTCONbits.PEIE = 1;
  1808  052E  170B               	bsf	11,6	;volatile
  1809                           
  1810                           ;AN1779_Source_Code_main.c: 244: PIE1bits.TMR1IE = 1;
  1811  052F  0021               	movlb	1	; select bank1
  1812  0530  1411               	bsf	17,0	;volatile
  1813  0531  0008               	return
  1814  0532                     __end_of_Int_Initialization:	
  1815                           
  1816                           	psect	text9
  1817  038F                     __ptext9:	
  1818 ;; *************** function _Get_ActualSpeed *****************
  1819 ;; Defined at:
  1820 ;;		line 481 in file "AN1779_Source_Code_main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;		None               void
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1834 ;;      Params:         0       0       0       0
  1835 ;;      Locals:         0       0       0       0
  1836 ;;      Temps:          0       0       0       0
  1837 ;;      Totals:         0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    4
  1841 ;; This function calls:
  1842 ;;		___fttol
  1843 ;;		___ltdiv
  1844 ;;		___lttoft
  1845 ;;		___tmul
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _Get_ActualSpeed
  1853  038F                     _Get_ActualSpeed:	
  1854                           
  1855                           ;AN1779_Source_Code_main.c: 483: SpeedMeasurement = (31000/SMT1CPR)*30;
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _Get_ActualSpeed: [wreg+status,2+status,0+pclath+cstack]
  1859  038F  003B               	movlb	27	; select bank27
  1860  0390  080F               	movf	15,w	;volatile
  1861  0391  0020               	movlb	0	; select bank0
  1862  0392  00C3               	movwf	___ltdiv@divisor
  1863  0393  003B               	movlb	27	; select bank27
  1864  0394  0810               	movf	16,w	;volatile
  1865  0395  0020               	movlb	0	; select bank0
  1866  0396  00C4               	movwf	___ltdiv@divisor+1
  1867  0397  003B               	movlb	27	; select bank27
  1868  0398  0811               	movf	17,w	;volatile
  1869  0399  0020               	movlb	0	; select bank0
  1870  039A  00C5               	movwf	___ltdiv@divisor+2
  1871  039B  3018               	movlw	24
  1872  039C  00C6               	movwf	___ltdiv@dividend
  1873  039D  3079               	movlw	121
  1874  039E  00C7               	movwf	___ltdiv@dividend+1
  1875  039F  3000               	movlw	0
  1876  03A0  00C8               	movwf	___ltdiv@dividend+2
  1877  03A1  2306               	fcall	___ltdiv
  1878  03A2  0020               	movlb	0	; select bank0
  1879  03A3  0843               	movf	?___ltdiv,w
  1880  03A4  00CE               	movwf	___tmul@multiplier
  1881  03A5  0844               	movf	?___ltdiv+1,w
  1882  03A6  00CF               	movwf	___tmul@multiplier+1
  1883  03A7  0845               	movf	?___ltdiv+2,w
  1884  03A8  00D0               	movwf	___tmul@multiplier+2
  1885  03A9  301E               	movlw	30
  1886  03AA  00D1               	movwf	___tmul@multiplicand
  1887  03AB  3000               	movlw	0
  1888  03AC  00D2               	movwf	___tmul@multiplicand+1
  1889  03AD  3000               	movlw	0
  1890  03AE  00D3               	movwf	___tmul@multiplicand+2
  1891  03AF  23CE               	fcall	___tmul
  1892  03B0  0020               	movlb	0	; select bank0
  1893  03B1  084E               	movf	?___tmul,w
  1894  03B2  00D7               	movwf	___lttoft@c
  1895  03B3  084F               	movf	?___tmul+1,w
  1896  03B4  00D8               	movwf	___lttoft@c+1
  1897  03B5  0850               	movf	?___tmul+2,w
  1898  03B6  00D9               	movwf	___lttoft@c+2
  1899  03B7  2495               	fcall	___lttoft
  1900  03B8  0020               	movlb	0	; select bank0
  1901  03B9  0857               	movf	?___lttoft,w
  1902  03BA  00AC               	movwf	_SpeedMeasurement
  1903  03BB  0858               	movf	?___lttoft+1,w
  1904  03BC  00AD               	movwf	_SpeedMeasurement+1
  1905  03BD  0859               	movf	?___lttoft+2,w
  1906  03BE  00AE               	movwf	_SpeedMeasurement+2
  1907                           
  1908                           ;AN1779_Source_Code_main.c: 484: SpeedActual = (int) SpeedMeasurement;
  1909  03BF  082C               	movf	_SpeedMeasurement,w
  1910  03C0  00C3               	movwf	___fttol@f1
  1911  03C1  082D               	movf	_SpeedMeasurement+1,w
  1912  03C2  00C4               	movwf	___fttol@f1+1
  1913  03C3  082E               	movf	_SpeedMeasurement+2,w
  1914  03C4  00C5               	movwf	___fttol@f1+2
  1915  03C5  21C3               	fcall	___fttol
  1916  03C6  0020               	movlb	0	; select bank0
  1917  03C7  0844               	movf	?___fttol+1,w
  1918  03C8  01BA               	clrf	_SpeedActual+1
  1919  03C9  07BA               	addwf	_SpeedActual+1,f
  1920  03CA  0843               	movf	?___fttol,w
  1921  03CB  01B9               	clrf	_SpeedActual
  1922  03CC  07B9               	addwf	_SpeedActual,f
  1923  03CD  0008               	return
  1924  03CE                     __end_of_Get_ActualSpeed:	
  1925                           
  1926                           	psect	text10
  1927  03CE                     __ptext10:	
  1928 ;; *************** function ___tmul *****************
  1929 ;; Defined at:
  1930 ;;		line 2 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\tmul.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  multiplier      3   11[BANK0 ] unsigned um
  1933 ;;  multiplicand    3   14[BANK0 ] unsigned um
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  product         3   17[BANK0 ] unsigned um
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  3   11[BANK0 ] unsigned um
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1945 ;;      Params:         0       6       0       0
  1946 ;;      Locals:         0       3       0       0
  1947 ;;      Temps:          0       0       0       0
  1948 ;;      Totals:         0       9       0       0
  1949 ;;Total ram usage:        9 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    2
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_Get_ActualSpeed
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function ___tmul
  1961  03CE                     ___tmul:	
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  1965  03CE  3000               	movlw	0
  1966  03CF  0020               	movlb	0	; select bank0
  1967  03D0  00D4               	movwf	___tmul@product
  1968  03D1  3000               	movlw	0
  1969  03D2  00D5               	movwf	___tmul@product+1
  1970  03D3  3000               	movlw	0
  1971  03D4  00D6               	movwf	___tmul@product+2
  1972  03D5                     l1921:	
  1973  03D5  1C4E               	btfss	___tmul@multiplier,0
  1974  03D6  2BDD               	goto	l1925
  1975  03D7  0851               	movf	___tmul@multiplicand,w
  1976  03D8  07D4               	addwf	___tmul@product,f
  1977  03D9  0852               	movf	___tmul@multiplicand+1,w
  1978  03DA  3DD5               	addwfc	___tmul@product+1,f
  1979  03DB  0853               	movf	___tmul@multiplicand+2,w
  1980  03DC  3DD6               	addwfc	___tmul@product+2,f
  1981  03DD                     l1925:	
  1982  03DD  3001               	movlw	1
  1983  03DE                     u1295:	
  1984  03DE  35D1               	lslf	___tmul@multiplicand,f
  1985  03DF  0DD2               	rlf	___tmul@multiplicand+1,f
  1986  03E0  0DD3               	rlf	___tmul@multiplicand+2,f
  1987  03E1  0B89               	decfsz	9,f
  1988  03E2  2BDE               	goto	u1295
  1989  03E3  3001               	movlw	1
  1990  03E4                     u1305:	
  1991  03E4  36D0               	lsrf	___tmul@multiplier+2,f
  1992  03E5  0CCF               	rrf	___tmul@multiplier+1,f
  1993  03E6  0CCE               	rrf	___tmul@multiplier,f
  1994  03E7  0B89               	decfsz	9,f
  1995  03E8  2BE4               	goto	u1305
  1996  03E9  0850               	movf	___tmul@multiplier+2,w
  1997  03EA  044F               	iorwf	___tmul@multiplier+1,w
  1998  03EB  044E               	iorwf	___tmul@multiplier,w
  1999  03EC  1D03               	skipz
  2000  03ED  2BD5               	goto	l1921
  2001  03EE  0854               	movf	___tmul@product,w
  2002  03EF  00CE               	movwf	?___tmul
  2003  03F0  0855               	movf	___tmul@product+1,w
  2004  03F1  00CF               	movwf	?___tmul+1
  2005  03F2  0856               	movf	___tmul@product+2,w
  2006  03F3  00D0               	movwf	?___tmul+2
  2007  03F4  0008               	return
  2008  03F5                     __end_of___tmul:	
  2009                           
  2010                           	psect	text11
  2011  0495                     __ptext11:	
  2012 ;; *************** function ___lttoft *****************
  2013 ;; Defined at:
  2014 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lttoft.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  c               3   20[BANK0 ] unsigned um
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  3   20[BANK0 ] float 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2028 ;;      Params:         0       3       0       0
  2029 ;;      Locals:         0       0       0       0
  2030 ;;      Temps:          0       1       0       0
  2031 ;;      Totals:         0       4       0       0
  2032 ;;Total ram usage:        4 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    3
  2035 ;; This function calls:
  2036 ;;		___ftpack
  2037 ;; This function is called by:
  2038 ;;		_Get_ActualSpeed
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function ___lttoft
  2044  0495                     ___lttoft:	
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in ___lttoft: [wreg+status,2+status,0+pclath+cstack]
  2048  0495  0020               	movlb	0	; select bank0
  2049  0496  0857               	movf	___lttoft@c,w
  2050  0497  00C3               	movwf	___ftpack@arg
  2051  0498  0858               	movf	___lttoft@c+1,w
  2052  0499  00C4               	movwf	___ftpack@arg+1
  2053  049A  0859               	movf	___lttoft@c+2,w
  2054  049B  00C5               	movwf	___ftpack@arg+2
  2055  049C  308E               	movlw	142
  2056  049D  00DA               	movwf	??___lttoft
  2057  049E  085A               	movf	??___lttoft,w
  2058  049F  00C6               	movwf	___ftpack@exp
  2059  04A0  01C7               	clrf	___ftpack@sign
  2060  04A1  224A               	fcall	___ftpack
  2061  04A2  0020               	movlb	0	; select bank0
  2062  04A3  0843               	movf	?___ftpack,w
  2063  04A4  00D7               	movwf	?___lttoft
  2064  04A5  0844               	movf	?___ftpack+1,w
  2065  04A6  00D8               	movwf	?___lttoft+1
  2066  04A7  0845               	movf	?___ftpack+2,w
  2067  04A8  00D9               	movwf	?___lttoft+2
  2068  04A9  0008               	return
  2069  04AA                     __end_of___lttoft:	
  2070                           
  2071                           	psect	text12
  2072  0306                     __ptext12:	
  2073 ;; *************** function ___ltdiv *****************
  2074 ;; Defined at:
  2075 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\ltdiv.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  divisor         3    0[BANK0 ] unsigned um
  2078 ;;  dividend        3    3[BANK0 ] unsigned um
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  quotient        3    7[BANK0 ] unsigned um
  2081 ;;  counter         1   10[BANK0 ] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  3    0[BANK0 ] unsigned um
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2091 ;;      Params:         0       6       0       0
  2092 ;;      Locals:         0       4       0       0
  2093 ;;      Temps:          0       1       0       0
  2094 ;;      Totals:         0      11       0       0
  2095 ;;Total ram usage:       11 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    2
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_Get_ActualSpeed
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           
  2106                           ;psect for function ___ltdiv
  2107  0306                     ___ltdiv:	
  2108                           
  2109                           ;incstack = 0
  2110                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  2111  0306  3000               	movlw	0
  2112  0307  0020               	movlb	0	; select bank0
  2113  0308  00CA               	movwf	___ltdiv@quotient
  2114  0309  3000               	movlw	0
  2115  030A  00CB               	movwf	___ltdiv@quotient+1
  2116  030B  3000               	movlw	0
  2117  030C  00CC               	movwf	___ltdiv@quotient+2
  2118  030D  0845               	movf	___ltdiv@divisor+2,w
  2119  030E  0444               	iorwf	___ltdiv@divisor+1,w
  2120  030F  0443               	iorwf	___ltdiv@divisor,w
  2121  0310  1903               	skipnz
  2122  0311  2B44               	goto	l1663
  2123  0312  01CD               	clrf	___ltdiv@counter
  2124  0313  0ACD               	incf	___ltdiv@counter,f
  2125  0314                     l1649:	
  2126  0314  1BC5               	btfsc	___ltdiv@divisor+2,7
  2127  0315  2B21               	goto	l1651
  2128  0316  3001               	movlw	1
  2129  0317                     u1045:	
  2130  0317  35C3               	lslf	___ltdiv@divisor,f
  2131  0318  0DC4               	rlf	___ltdiv@divisor+1,f
  2132  0319  0DC5               	rlf	___ltdiv@divisor+2,f
  2133  031A  0B89               	decfsz	9,f
  2134  031B  2B17               	goto	u1045
  2135  031C  3001               	movlw	1
  2136  031D  00C9               	movwf	??___ltdiv
  2137  031E  0849               	movf	??___ltdiv,w
  2138  031F  07CD               	addwf	___ltdiv@counter,f
  2139  0320  2B14               	goto	l1649
  2140  0321                     l1651:	
  2141  0321  3001               	movlw	1
  2142  0322                     u1065:	
  2143  0322  35CA               	lslf	___ltdiv@quotient,f
  2144  0323  0DCB               	rlf	___ltdiv@quotient+1,f
  2145  0324  0DCC               	rlf	___ltdiv@quotient+2,f
  2146  0325  0B89               	decfsz	9,f
  2147  0326  2B22               	goto	u1065
  2148  0327  0845               	movf	___ltdiv@divisor+2,w
  2149  0328  0248               	subwf	___ltdiv@dividend+2,w
  2150  0329  1D03               	skipz
  2151  032A  2B31               	goto	u1075
  2152  032B  0844               	movf	___ltdiv@divisor+1,w
  2153  032C  0247               	subwf	___ltdiv@dividend+1,w
  2154  032D  1D03               	skipz
  2155  032E  2B31               	goto	u1075
  2156  032F  0843               	movf	___ltdiv@divisor,w
  2157  0330  0246               	subwf	___ltdiv@dividend,w
  2158  0331                     u1075:	
  2159  0331  1C03               	skipc
  2160  0332  2B3A               	goto	l1659
  2161  0333  0843               	movf	___ltdiv@divisor,w
  2162  0334  02C6               	subwf	___ltdiv@dividend,f
  2163  0335  0844               	movf	___ltdiv@divisor+1,w
  2164  0336  3BC7               	subwfb	___ltdiv@dividend+1,f
  2165  0337  0845               	movf	___ltdiv@divisor+2,w
  2166  0338  3BC8               	subwfb	___ltdiv@dividend+2,f
  2167  0339  144A               	bsf	___ltdiv@quotient,0
  2168  033A                     l1659:	
  2169  033A  3001               	movlw	1
  2170  033B                     u1085:	
  2171  033B  36C5               	lsrf	___ltdiv@divisor+2,f
  2172  033C  0CC4               	rrf	___ltdiv@divisor+1,f
  2173  033D  0CC3               	rrf	___ltdiv@divisor,f
  2174  033E  0B89               	decfsz	9,f
  2175  033F  2B3B               	goto	u1085
  2176  0340  3001               	movlw	1
  2177  0341  02CD               	subwf	___ltdiv@counter,f
  2178  0342  1D03               	btfss	3,2
  2179  0343  2B21               	goto	l1651
  2180  0344                     l1663:	
  2181  0344  084A               	movf	___ltdiv@quotient,w
  2182  0345  00C3               	movwf	?___ltdiv
  2183  0346  084B               	movf	___ltdiv@quotient+1,w
  2184  0347  00C4               	movwf	?___ltdiv+1
  2185  0348  084C               	movf	___ltdiv@quotient+2,w
  2186  0349  00C5               	movwf	?___ltdiv+2
  2187  034A  0008               	return
  2188  034B                     __end_of___ltdiv:	
  2189                           
  2190                           	psect	text13
  2191  0514                     __ptext13:	
  2192 ;; *************** function _FVR_Initialization *****************
  2193 ;; Defined at:
  2194 ;;		line 285 in file "AN1779_Source_Code_main.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;		None               void
  2201 ;; Registers used:
  2202 ;;		None
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2208 ;;      Params:         0       0       0       0
  2209 ;;      Locals:         0       0       0       0
  2210 ;;      Temps:          0       0       0       0
  2211 ;;      Totals:         0       0       0       0
  2212 ;;Total ram usage:        0 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    2
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _FVR_Initialization
  2224  0514                     _FVR_Initialization:	
  2225                           
  2226                           ;AN1779_Source_Code_main.c: 287: FVRCONbits.TSEN = 1;
  2227                           
  2228                           ;incstack = 0
  2229                           ; Regs used in _FVR_Initialization: []
  2230  0514  0022               	movlb	2	; select bank2
  2231  0515  1697               	bsf	23,5	;volatile
  2232                           
  2233                           ;AN1779_Source_Code_main.c: 288: FVRCONbits.TSRNG = 1;
  2234  0516  1617               	bsf	23,4	;volatile
  2235                           
  2236                           ;AN1779_Source_Code_main.c: 289: FVRCONbits.FVREN = 1;
  2237  0517  1797               	bsf	23,7	;volatile
  2238                           
  2239                           ;AN1779_Source_Code_main.c: 290: FVRCONbits.CDAFVR1 = 0;
  2240  0518  1197               	bcf	23,3	;volatile
  2241                           
  2242                           ;AN1779_Source_Code_main.c: 291: FVRCONbits.CDAFVR0 = 1;
  2243  0519  1517               	bsf	23,2	;volatile
  2244  051A  0008               	return
  2245  051B                     __end_of_FVR_Initialization:	
  2246                           
  2247                           	psect	text14
  2248  0479                     __ptext14:	
  2249 ;; *************** function _DesiredSpeed_Calculation *****************
  2250 ;; Defined at:
  2251 ;;		line 459 in file "AN1779_Source_Code_main.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;		None               void
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2265 ;;      Params:         0       0       0       0
  2266 ;;      Locals:         0       0       0       0
  2267 ;;      Temps:          0       0       0       0
  2268 ;;      Totals:         0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    4
  2272 ;; This function calls:
  2273 ;;		___awtoft
  2274 ;;		___fttol
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _DesiredSpeed_Calculation
  2282  0479                     _DesiredSpeed_Calculation:	
  2283                           
  2284                           ;AN1779_Source_Code_main.c: 461: SpeedCalculation = (2400/1024)*ADCValue;
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _DesiredSpeed_Calculation: [wreg+status,2+status,0+pclath+cstack]
  2288  0479  0020               	movlb	0	; select bank0
  2289  047A  3541               	lslf	_ADCValue,w
  2290  047B  00CB               	movwf	___awtoft@c
  2291  047C  0D42               	rlf	_ADCValue+1,w
  2292  047D  00CC               	movwf	___awtoft@c+1
  2293  047E  243A               	fcall	___awtoft
  2294  047F  0020               	movlb	0	; select bank0
  2295  0480  084B               	movf	?___awtoft,w
  2296  0481  00A9               	movwf	_SpeedCalculation
  2297  0482  084C               	movf	?___awtoft+1,w
  2298  0483  00AA               	movwf	_SpeedCalculation+1
  2299  0484  084D               	movf	?___awtoft+2,w
  2300  0485  00AB               	movwf	_SpeedCalculation+2
  2301                           
  2302                           ;AN1779_Source_Code_main.c: 462: SpeedReference = (int)SpeedCalculation;
  2303  0486  0829               	movf	_SpeedCalculation,w
  2304  0487  00C3               	movwf	___fttol@f1
  2305  0488  082A               	movf	_SpeedCalculation+1,w
  2306  0489  00C4               	movwf	___fttol@f1+1
  2307  048A  082B               	movf	_SpeedCalculation+2,w
  2308  048B  00C5               	movwf	___fttol@f1+2
  2309  048C  21C3               	fcall	___fttol
  2310  048D  0020               	movlb	0	; select bank0
  2311  048E  0844               	movf	?___fttol+1,w
  2312  048F  01C0               	clrf	_SpeedReference+1
  2313  0490  07C0               	addwf	_SpeedReference+1,f
  2314  0491  0843               	movf	?___fttol,w
  2315  0492  01BF               	clrf	_SpeedReference
  2316  0493  07BF               	addwf	_SpeedReference,f
  2317  0494  0008               	return
  2318  0495                     __end_of_DesiredSpeed_Calculation:	
  2319                           
  2320                           	psect	text15
  2321  01C3                     __ptext15:	
  2322 ;; *************** function ___fttol *****************
  2323 ;; Defined at:
  2324 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\fttol.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  f1              3    0[BANK0 ] float 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  lval            4    9[BANK0 ] unsigned long 
  2329 ;;  exp1            1   13[BANK0 ] unsigned char 
  2330 ;;  sign1           1    8[BANK0 ] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  4    0[BANK0 ] long 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2340 ;;      Params:         0       4       0       0
  2341 ;;      Locals:         0       6       0       0
  2342 ;;      Temps:          0       4       0       0
  2343 ;;      Totals:         0      14       0       0
  2344 ;;Total ram usage:       14 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    2
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_PWM_Calculation
  2351 ;;		_DesiredSpeed_Calculation
  2352 ;;		_Get_ActualSpeed
  2353 ;;		_PI_Calculation
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           
  2358                           ;psect for function ___fttol
  2359  01C3                     ___fttol:	
  2360                           
  2361                           ;incstack = 0
  2362                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2363  01C3  0020               	movlb	0	; select bank0
  2364  01C4  0843               	movf	___fttol@f1,w
  2365  01C5  00C7               	movwf	??___fttol
  2366  01C6  0844               	movf	___fttol@f1+1,w
  2367  01C7  00C8               	movwf	??___fttol+1
  2368  01C8  0845               	movf	___fttol@f1+2,w
  2369  01C9  00C9               	movwf	??___fttol+2
  2370  01CA  1003               	clrc
  2371  01CB  0D48               	rlf	??___fttol+1,w
  2372  01CC  0D49               	rlf	??___fttol+2,w
  2373  01CD  00CA               	movwf	??___fttol+3
  2374  01CE  084A               	movf	??___fttol+3,w
  2375  01CF  00D0               	movwf	___fttol@exp1
  2376  01D0  08D0               	movf	___fttol@exp1,f
  2377  01D1  1D03               	skipz
  2378  01D2  29DC               	goto	l1605
  2379  01D3  3000               	movlw	0
  2380  01D4  00C6               	movwf	?___fttol+3
  2381  01D5  3000               	movlw	0
  2382  01D6  00C5               	movwf	?___fttol+2
  2383  01D7  3000               	movlw	0
  2384  01D8  00C4               	movwf	?___fttol+1
  2385  01D9  3000               	movlw	0
  2386  01DA  00C3               	movwf	?___fttol
  2387  01DB  0008               	return
  2388  01DC                     l1605:	
  2389  01DC  0843               	movf	___fttol@f1,w
  2390  01DD  00C7               	movwf	??___fttol
  2391  01DE  0844               	movf	___fttol@f1+1,w
  2392  01DF  00C8               	movwf	??___fttol+1
  2393  01E0  0845               	movf	___fttol@f1+2,w
  2394  01E1  00C9               	movwf	??___fttol+2
  2395  01E2  3017               	movlw	23
  2396  01E3                     u945:	
  2397  01E3  36C9               	lsrf	??___fttol+2,f
  2398  01E4  0CC8               	rrf	??___fttol+1,f
  2399  01E5  0CC7               	rrf	??___fttol,f
  2400  01E6  0B89               	decfsz	9,f
  2401  01E7  29E3               	goto	u945
  2402  01E8  0847               	movf	??___fttol,w
  2403  01E9  00CA               	movwf	??___fttol+3
  2404  01EA  084A               	movf	??___fttol+3,w
  2405  01EB  00CB               	movwf	___fttol@sign1
  2406  01EC  17C4               	bsf	___fttol@f1+1,7
  2407  01ED  30FF               	movlw	255
  2408  01EE  05C3               	andwf	___fttol@f1,f
  2409  01EF  30FF               	movlw	255
  2410  01F0  05C4               	andwf	___fttol@f1+1,f
  2411  01F1  3000               	movlw	0
  2412  01F2  05C5               	andwf	___fttol@f1+2,f
  2413  01F3  0843               	movf	___fttol@f1,w
  2414  01F4  00CC               	movwf	___fttol@lval
  2415  01F5  0844               	movf	___fttol@f1+1,w
  2416  01F6  00CD               	movwf	___fttol@lval+1
  2417  01F7  0845               	movf	___fttol@f1+2,w
  2418  01F8  00CE               	movwf	___fttol@lval+2
  2419  01F9  01CF               	clrf	___fttol@lval+3
  2420  01FA  308E               	movlw	142
  2421  01FB  02D0               	subwf	___fttol@exp1,f
  2422  01FC  1FD0               	btfss	___fttol@exp1,7
  2423  01FD  2A1A               	goto	l1625
  2424  01FE  0850               	movf	___fttol@exp1,w
  2425  01FF  3A80               	xorlw	128
  2426  0200  3E8F               	addlw	143
  2427  0201  1803               	skipnc
  2428  0202  2A0C               	goto	l1623
  2429  0203  3000               	movlw	0
  2430  0204  00C6               	movwf	?___fttol+3
  2431  0205  3000               	movlw	0
  2432  0206  00C5               	movwf	?___fttol+2
  2433  0207  3000               	movlw	0
  2434  0208  00C4               	movwf	?___fttol+1
  2435  0209  3000               	movlw	0
  2436  020A  00C3               	movwf	?___fttol
  2437  020B  0008               	return
  2438  020C                     l1623:	
  2439  020C  3001               	movlw	1
  2440  020D                     u975:	
  2441  020D  36CF               	lsrf	___fttol@lval+3,f
  2442  020E  0CCE               	rrf	___fttol@lval+2,f
  2443  020F  0CCD               	rrf	___fttol@lval+1,f
  2444  0210  0CCC               	rrf	___fttol@lval,f
  2445  0211  0B89               	decfsz	9,f
  2446  0212  2A0D               	goto	u975
  2447  0213  3001               	movlw	1
  2448  0214  00C7               	movwf	??___fttol
  2449  0215  0847               	movf	??___fttol,w
  2450  0216  07D0               	addwf	___fttol@exp1,f
  2451  0217  1903               	btfsc	3,2
  2452  0218  2A33               	goto	l1635
  2453  0219  2A0C               	goto	l1623
  2454  021A                     l1625:	
  2455  021A  3018               	movlw	24
  2456  021B  0250               	subwf	___fttol@exp1,w
  2457  021C  1C03               	skipc
  2458  021D  2A30               	goto	l1633
  2459  021E  3000               	movlw	0
  2460  021F  00C6               	movwf	?___fttol+3
  2461  0220  3000               	movlw	0
  2462  0221  00C5               	movwf	?___fttol+2
  2463  0222  3000               	movlw	0
  2464  0223  00C4               	movwf	?___fttol+1
  2465  0224  3000               	movlw	0
  2466  0225  00C3               	movwf	?___fttol
  2467  0226  0008               	return
  2468  0227                     l1631:	
  2469  0227  3001               	movlw	1
  2470  0228                     u1005:	
  2471  0228  35CC               	lslf	___fttol@lval,f
  2472  0229  0DCD               	rlf	___fttol@lval+1,f
  2473  022A  0DCE               	rlf	___fttol@lval+2,f
  2474  022B  0DCF               	rlf	___fttol@lval+3,f
  2475  022C  0B89               	decfsz	9,f
  2476  022D  2A28               	goto	u1005
  2477  022E  3001               	movlw	1
  2478  022F  02D0               	subwf	___fttol@exp1,f
  2479  0230                     l1633:	
  2480  0230  08D0               	movf	___fttol@exp1,f
  2481  0231  1D03               	skipz
  2482  0232  2A27               	goto	l1631
  2483  0233                     l1635:	
  2484  0233  084B               	movf	___fttol@sign1,w
  2485  0234  1903               	btfsc	3,2
  2486  0235  2A41               	goto	l1639
  2487  0236  09CC               	comf	___fttol@lval,f
  2488  0237  09CD               	comf	___fttol@lval+1,f
  2489  0238  09CE               	comf	___fttol@lval+2,f
  2490  0239  09CF               	comf	___fttol@lval+3,f
  2491  023A  0ACC               	incf	___fttol@lval,f
  2492  023B  1903               	skipnz
  2493  023C  0ACD               	incf	___fttol@lval+1,f
  2494  023D  1903               	skipnz
  2495  023E  0ACE               	incf	___fttol@lval+2,f
  2496  023F  1903               	skipnz
  2497  0240  0ACF               	incf	___fttol@lval+3,f
  2498  0241                     l1639:	
  2499  0241  084F               	movf	___fttol@lval+3,w
  2500  0242  00C6               	movwf	?___fttol+3
  2501  0243  084E               	movf	___fttol@lval+2,w
  2502  0244  00C5               	movwf	?___fttol+2
  2503  0245  084D               	movf	___fttol@lval+1,w
  2504  0246  00C4               	movwf	?___fttol+1
  2505  0247  084C               	movf	___fttol@lval,w
  2506  0248  00C3               	movwf	?___fttol
  2507  0249  0008               	return
  2508  024A                     __end_of___fttol:	
  2509                           
  2510                           	psect	text16
  2511  0521                     __ptext16:	
  2512 ;; *************** function _DAC_Initialization *****************
  2513 ;; Defined at:
  2514 ;;		line 316 in file "AN1779_Source_Code_main.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;		None
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2528 ;;      Params:         0       0       0       0
  2529 ;;      Locals:         0       0       0       0
  2530 ;;      Temps:          0       0       0       0
  2531 ;;      Totals:         0       0       0       0
  2532 ;;Total ram usage:        0 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    2
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           
  2543                           ;psect for function _DAC_Initialization
  2544  0521                     _DAC_Initialization:	
  2545                           
  2546                           ;AN1779_Source_Code_main.c: 318: DAC1CON0 = 0b10001000;
  2547                           
  2548                           ;incstack = 0
  2549                           ; Regs used in _DAC_Initialization: [wreg]
  2550  0521  3088               	movlw	136
  2551  0522  0022               	movlb	2	; select bank2
  2552  0523  0098               	movwf	24	;volatile
  2553                           
  2554                           ;AN1779_Source_Code_main.c: 319: DAC1CON1 = 0x05;
  2555  0524  3005               	movlw	5
  2556  0525  0099               	movwf	25	;volatile
  2557  0526  0008               	return
  2558  0527                     __end_of_DAC_Initialization:	
  2559                           
  2560                           	psect	text17
  2561  050A                     __ptext17:	
  2562 ;; *************** function _Comp_Initialization *****************
  2563 ;; Defined at:
  2564 ;;		line 270 in file "AN1779_Source_Code_main.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;		None               void
  2571 ;; Registers used:
  2572 ;;		wreg
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2578 ;;      Params:         0       0       0       0
  2579 ;;      Locals:         0       0       0       0
  2580 ;;      Temps:          0       0       0       0
  2581 ;;      Totals:         0       0       0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    2
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_main
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           
  2593                           ;psect for function _Comp_Initialization
  2594  050A                     _Comp_Initialization:	
  2595                           
  2596                           ;AN1779_Source_Code_main.c: 272: CM1CON0 = 0b10000100;
  2597                           
  2598                           ;incstack = 0
  2599                           ; Regs used in _Comp_Initialization: [wreg]
  2600  050A  3084               	movlw	132
  2601  050B  0022               	movlb	2	; select bank2
  2602  050C  0091               	movwf	17	;volatile
  2603                           
  2604                           ;AN1779_Source_Code_main.c: 273: CM1CON1 = 0b00000110;
  2605  050D  3006               	movlw	6
  2606  050E  0092               	movwf	18	;volatile
  2607                           
  2608                           ;AN1779_Source_Code_main.c: 274: CM2CON0 = 0b10000100;
  2609  050F  3084               	movlw	132
  2610  0510  0093               	movwf	19	;volatile
  2611                           
  2612                           ;AN1779_Source_Code_main.c: 275: CM2CON1 = 0b00010001;
  2613  0511  3011               	movlw	17
  2614  0512  0094               	movwf	20	;volatile
  2615  0513  0008               	return
  2616  0514                     __end_of_Comp_Initialization:	
  2617                           
  2618                           	psect	text18
  2619  04BC                     __ptext18:	
  2620 ;; *************** function _CWG_Initialization *****************
  2621 ;; Defined at:
  2622 ;;		line 368 in file "AN1779_Source_Code_main.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;		None               void
  2629 ;; Registers used:
  2630 ;;		wreg, status,2
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2636 ;;      Params:         0       0       0       0
  2637 ;;      Locals:         0       0       0       0
  2638 ;;      Temps:          0       0       0       0
  2639 ;;      Totals:         0       0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    2
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_main
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _CWG_Initialization
  2652  04BC                     _CWG_Initialization:	
  2653                           
  2654                           ;AN1779_Source_Code_main.c: 370: CWG1CON0 = 0x00;
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in _CWG_Initialization: [wreg+status,2]
  2658  04BC  002D               	movlb	13	; select bank13
  2659  04BD  0196               	clrf	22	;volatile
  2660                           
  2661                           ;AN1779_Source_Code_main.c: 371: CWG1CON0 = 0b00000010;
  2662  04BE  3002               	movlw	2
  2663  04BF  0096               	movwf	22	;volatile
  2664                           
  2665                           ;AN1779_Source_Code_main.c: 372: CWG1DBR = 0x20;
  2666  04C0  3020               	movlw	32
  2667  04C1  0091               	movwf	17	;volatile
  2668                           
  2669                           ;AN1779_Source_Code_main.c: 373: CWG1DBF = 0x20;
  2670  04C2  3020               	movlw	32
  2671  04C3  0092               	movwf	18	;volatile
  2672                           
  2673                           ;AN1779_Source_Code_main.c: 374: CWG1CON1 = 0b00000000;
  2674  04C4  0197               	clrf	23	;volatile
  2675                           
  2676                           ;AN1779_Source_Code_main.c: 375: CWG1OCON1 = 0b00001111;
  2677  04C5  300F               	movlw	15
  2678  04C6  0098               	movwf	24	;volatile
  2679                           
  2680                           ;AN1779_Source_Code_main.c: 376: CWG1CLKCON = 0b00000000;
  2681  04C7  0199               	clrf	25	;volatile
  2682                           
  2683                           ;AN1779_Source_Code_main.c: 377: CWG1ISM = 0b00000011;
  2684  04C8  3003               	movlw	3
  2685  04C9  009A               	movwf	26	;volatile
  2686                           
  2687                           ;AN1779_Source_Code_main.c: 379: CWG1AS0 = 0b00101000;
  2688  04CA  3028               	movlw	40
  2689  04CB  0093               	movwf	19	;volatile
  2690                           
  2691                           ;AN1779_Source_Code_main.c: 380: CWG1AS1bits.C2AS = 1;
  2692  04CC  1514               	bsf	20,2	;volatile
  2693  04CD  0008               	return
  2694  04CE                     __end_of_CWG_Initialization:	
  2695                           
  2696                           	psect	text19
  2697  04FC                     __ptext19:	
  2698 ;; *************** function _CCP_Initialization *****************
  2699 ;; Defined at:
  2700 ;;		line 327 in file "AN1779_Source_Code_main.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		wreg, status,2
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2714 ;;      Params:         0       0       0       0
  2715 ;;      Locals:         0       0       0       0
  2716 ;;      Temps:          0       0       0       0
  2717 ;;      Totals:         0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    2
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           
  2729                           ;psect for function _CCP_Initialization
  2730  04FC                     _CCP_Initialization:	
  2731                           
  2732                           ;AN1779_Source_Code_main.c: 329: T2CLKCON = 0b00000000;
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in _CCP_Initialization: [wreg+status,2]
  2736  04FC  0020               	movlb	0	; select bank0
  2737  04FD  019E               	clrf	30	;volatile
  2738                           
  2739                           ;AN1779_Source_Code_main.c: 330: T2CON = 0b00000111;
  2740  04FE  3007               	movlw	7
  2741  04FF  009C               	movwf	28	;volatile
  2742                           
  2743                           ;AN1779_Source_Code_main.c: 331: PR2 = 0xFF;
  2744  0500  30FF               	movlw	255
  2745  0501  009B               	movwf	27	;volatile
  2746                           
  2747                           ;AN1779_Source_Code_main.c: 332: TMR2 = 0x00;
  2748  0502  019A               	clrf	26	;volatile
  2749                           
  2750                           ;AN1779_Source_Code_main.c: 333: PIR1bits.TMR2IF = 0;
  2751  0503  1091               	bcf	17,1	;volatile
  2752                           
  2753                           ;AN1779_Source_Code_main.c: 335: CCP1CON = 0b11001100;
  2754  0504  30CC               	movlw	204
  2755  0505  0025               	movlb	5	; select bank5
  2756  0506  0093               	movwf	19	;volatile
  2757                           
  2758                           ;AN1779_Source_Code_main.c: 336: CCPR1 = 0x00;
  2759  0507  0191               	clrf	17	;volatile
  2760  0508  0192               	clrf	18	;volatile
  2761  0509  0008               	return
  2762  050A                     __end_of_CCP_Initialization:	
  2763                           
  2764                           	psect	text20
  2765  04CE                     __ptext20:	
  2766 ;; *************** function _ADC_Initialization *****************
  2767 ;; Defined at:
  2768 ;;		line 345 in file "AN1779_Source_Code_main.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;		None               void
  2775 ;; Registers used:
  2776 ;;		wreg, status,2
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2782 ;;      Params:         0       0       0       0
  2783 ;;      Locals:         0       0       0       0
  2784 ;;      Temps:          0       1       0       0
  2785 ;;      Totals:         0       1       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    2
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function _ADC_Initialization
  2798  04CE                     _ADC_Initialization:	
  2799                           
  2800                           ;AN1779_Source_Code_main.c: 347: ADRESH = 0x00;
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in _ADC_Initialization: [wreg+status,2]
  2804  04CE  0021               	movlb	1	; select bank1
  2805  04CF  019C               	clrf	28	;volatile
  2806                           
  2807                           ;AN1779_Source_Code_main.c: 348: ADRESL = 0x00;
  2808  04D0  019B               	clrf	27	;volatile
  2809                           
  2810                           ;AN1779_Source_Code_main.c: 349: ADCON1 = 0b11010000;
  2811  04D1  30D0               	movlw	208
  2812  04D2  009E               	movwf	30	;volatile
  2813                           
  2814                           ;AN1779_Source_Code_main.c: 351: ADCON0 = 0b00001100;
  2815  04D3  300C               	movlw	12
  2816  04D4  009D               	movwf	29	;volatile
  2817                           
  2818                           ;AN1779_Source_Code_main.c: 352: _delay((unsigned long)((300)*(16000000/4000000.0)));
  2819  04D5  30EF               	movlw	239
  2820  04D6  0020               	movlb	0	; select bank0
  2821  04D7  00C3               	movwf	??_ADC_Initialization
  2822  04D8                     u1377:	
  2823  04D8  2CD9               	nop2
  2824  04D9  0BC3               	decfsz	??_ADC_Initialization,f
  2825  04DA  2CD8               	goto	u1377
  2826  04DB  2CDC               	nop2	;nop
  2827  04DC  2CDD               	nop2	;nop
  2828  04DD  0008               	return
  2829  04DE                     __end_of_ADC_Initialization:	
  2830                           
  2831                           	psect	text21
  2832  043A                     __ptext21:	
  2833 ;; *************** function ___awtoft *****************
  2834 ;; Defined at:
  2835 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awtoft.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  c               2    8[BANK0 ] int 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  sign            1   13[BANK0 ] unsigned char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  3    8[BANK0 ] float 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, pclath, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2849 ;;      Params:         0       3       0       0
  2850 ;;      Locals:         0       1       0       0
  2851 ;;      Temps:          0       2       0       0
  2852 ;;      Totals:         0       6       0       0
  2853 ;;Total ram usage:        6 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    3
  2856 ;; This function calls:
  2857 ;;		___ftpack
  2858 ;; This function is called by:
  2859 ;;		_PWM_Calculation
  2860 ;;		_DesiredSpeed_Calculation
  2861 ;;		_PI_Calculation
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function ___awtoft
  2867  043A                     ___awtoft:	
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2871  043A  0020               	movlb	0	; select bank0
  2872  043B  01D0               	clrf	___awtoft@sign
  2873  043C  1FCC               	btfss	___awtoft@c+1,7
  2874  043D  2C45               	goto	l1545
  2875  043E  09CB               	comf	___awtoft@c,f
  2876  043F  09CC               	comf	___awtoft@c+1,f
  2877  0440  0ACB               	incf	___awtoft@c,f
  2878  0441  1903               	skipnz
  2879  0442  0ACC               	incf	___awtoft@c+1,f
  2880  0443  01D0               	clrf	___awtoft@sign
  2881  0444  0AD0               	incf	___awtoft@sign,f
  2882  0445                     l1545:	
  2883  0445  084B               	movf	___awtoft@c,w
  2884  0446  00C3               	movwf	___ftpack@arg
  2885  0447  084C               	movf	___awtoft@c+1,w
  2886  0448  00C4               	movwf	___ftpack@arg+1
  2887  0449  01C5               	clrf	___ftpack@arg+2
  2888  044A  308E               	movlw	142
  2889  044B  00CE               	movwf	??___awtoft
  2890  044C  084E               	movf	??___awtoft,w
  2891  044D  00C6               	movwf	___ftpack@exp
  2892  044E  0850               	movf	___awtoft@sign,w
  2893  044F  00CF               	movwf	??___awtoft+1
  2894  0450  084F               	movf	??___awtoft+1,w
  2895  0451  00C7               	movwf	___ftpack@sign
  2896  0452  224A               	fcall	___ftpack
  2897  0453  0020               	movlb	0	; select bank0
  2898  0454  0843               	movf	?___ftpack,w
  2899  0455  00CB               	movwf	?___awtoft
  2900  0456  0844               	movf	?___ftpack+1,w
  2901  0457  00CC               	movwf	?___awtoft+1
  2902  0458  0845               	movf	?___ftpack+2,w
  2903  0459  00CD               	movwf	?___awtoft+2
  2904  045A  0008               	return
  2905  045B                     __end_of___awtoft:	
  2906                           
  2907                           	psect	text22
  2908  024A                     __ptext22:	
  2909 ;; *************** function ___ftpack *****************
  2910 ;; Defined at:
  2911 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\float.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  arg             3    0[BANK0 ] unsigned um
  2914 ;;  exp             1    3[BANK0 ] unsigned char 
  2915 ;;  sign            1    4[BANK0 ] unsigned char 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  3    0[BANK0 ] float 
  2920 ;; Registers used:
  2921 ;;		wreg, status,2, status,0
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2927 ;;      Params:         0       5       0       0
  2928 ;;      Locals:         0       0       0       0
  2929 ;;      Temps:          0       3       0       0
  2930 ;;      Totals:         0       8       0       0
  2931 ;;Total ram usage:        8 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    2
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		___awtoft
  2938 ;;		___ftmul
  2939 ;;		___lttoft
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function ___ftpack
  2945  024A                     ___ftpack:	
  2946                           
  2947                           ;incstack = 0
  2948                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2949  024A  0020               	movlb	0	; select bank0
  2950  024B  0846               	movf	___ftpack@exp,w
  2951  024C  1903               	btfsc	3,2
  2952  024D  2A53               	goto	l1511
  2953  024E  0845               	movf	___ftpack@arg+2,w
  2954  024F  0444               	iorwf	___ftpack@arg+1,w
  2955  0250  0443               	iorwf	___ftpack@arg,w
  2956  0251  1D03               	skipz
  2957  0252  2A64               	goto	l1517
  2958  0253                     l1511:	
  2959  0253  3000               	movlw	0
  2960  0254  00C3               	movwf	?___ftpack
  2961  0255  3000               	movlw	0
  2962  0256  00C4               	movwf	?___ftpack+1
  2963  0257  3000               	movlw	0
  2964  0258  00C5               	movwf	?___ftpack+2
  2965  0259  0008               	return
  2966  025A                     l1515:	
  2967  025A  3001               	movlw	1
  2968  025B  00C8               	movwf	??___ftpack
  2969  025C  0848               	movf	??___ftpack,w
  2970  025D  07C6               	addwf	___ftpack@exp,f
  2971  025E  3001               	movlw	1
  2972  025F                     u715:	
  2973  025F  36C5               	lsrf	___ftpack@arg+2,f
  2974  0260  0CC4               	rrf	___ftpack@arg+1,f
  2975  0261  0CC3               	rrf	___ftpack@arg,f
  2976  0262  0B89               	decfsz	9,f
  2977  0263  2A5F               	goto	u715
  2978  0264                     l1517:	
  2979  0264  30FE               	movlw	254
  2980  0265  0545               	andwf	___ftpack@arg+2,w
  2981  0266  1903               	btfsc	3,2
  2982  0267  2A7D               	goto	l409
  2983  0268  2A5A               	goto	l1515
  2984  0269                     l1519:	
  2985  0269  3001               	movlw	1
  2986  026A  00C8               	movwf	??___ftpack
  2987  026B  0848               	movf	??___ftpack,w
  2988  026C  07C6               	addwf	___ftpack@exp,f
  2989  026D  3001               	movlw	1
  2990  026E  07C3               	addwf	___ftpack@arg,f
  2991  026F  3000               	movlw	0
  2992  0270  1803               	skipnc
  2993  0271  3001               	movlw	1
  2994  0272  07C4               	addwf	___ftpack@arg+1,f
  2995  0273  3000               	movlw	0
  2996  0274  1803               	skipnc
  2997  0275  3001               	movlw	1
  2998  0276  07C5               	addwf	___ftpack@arg+2,f
  2999  0277  3001               	movlw	1
  3000  0278                     u735:	
  3001  0278  36C5               	lsrf	___ftpack@arg+2,f
  3002  0279  0CC4               	rrf	___ftpack@arg+1,f
  3003  027A  0CC3               	rrf	___ftpack@arg,f
  3004  027B  0B89               	decfsz	9,f
  3005  027C  2A78               	goto	u735
  3006  027D                     l409:	
  3007  027D  30FF               	movlw	255
  3008  027E  0545               	andwf	___ftpack@arg+2,w
  3009  027F  1903               	btfsc	3,2
  3010  0280  2A8A               	goto	l1527
  3011  0281  2A69               	goto	l1519
  3012  0282                     l1525:	
  3013  0282  3001               	movlw	1
  3014  0283  02C6               	subwf	___ftpack@exp,f
  3015  0284  3001               	movlw	1
  3016  0285                     u755:	
  3017  0285  35C3               	lslf	___ftpack@arg,f
  3018  0286  0DC4               	rlf	___ftpack@arg+1,f
  3019  0287  0DC5               	rlf	___ftpack@arg+2,f
  3020  0288  0B89               	decfsz	9,f
  3021  0289  2A85               	goto	u755
  3022  028A                     l1527:	
  3023  028A  1FC4               	btfss	___ftpack@arg+1,7
  3024  028B  2A82               	goto	l1525
  3025  028C  1846               	btfsc	___ftpack@exp,0
  3026  028D  2A94               	goto	l415
  3027  028E  30FF               	movlw	255
  3028  028F  05C3               	andwf	___ftpack@arg,f
  3029  0290  307F               	movlw	127
  3030  0291  05C4               	andwf	___ftpack@arg+1,f
  3031  0292  30FF               	movlw	255
  3032  0293  05C5               	andwf	___ftpack@arg+2,f
  3033  0294                     l415:	
  3034  0294  1003               	clrc
  3035  0295  0CC6               	rrf	___ftpack@exp,f
  3036  0296  0846               	movf	___ftpack@exp,w
  3037  0297  00C8               	movwf	??___ftpack
  3038  0298  01C9               	clrf	??___ftpack+1
  3039  0299  01CA               	clrf	??___ftpack+2
  3040  029A  3010               	movlw	16
  3041  029B                     u785:	
  3042  029B  35C8               	lslf	??___ftpack,f
  3043  029C  0DC9               	rlf	??___ftpack+1,f
  3044  029D  0DCA               	rlf	??___ftpack+2,f
  3045  029E  0B89               	decfsz	9,f
  3046  029F  2A9B               	goto	u785
  3047  02A0  0848               	movf	??___ftpack,w
  3048  02A1  04C3               	iorwf	___ftpack@arg,f
  3049  02A2  0849               	movf	??___ftpack+1,w
  3050  02A3  04C4               	iorwf	___ftpack@arg+1,f
  3051  02A4  084A               	movf	??___ftpack+2,w
  3052  02A5  04C5               	iorwf	___ftpack@arg+2,f
  3053  02A6  0847               	movf	___ftpack@sign,w
  3054  02A7  1903               	btfsc	3,2
  3055  02A8  0008               	return
  3056  02A9  17C5               	bsf	___ftpack@arg+2,7
  3057  02AA  0008               	return
  3058  02AB                     __end_of___ftpack:	
  3059                           
  3060                           	psect	intentry
  3061  0004                     __pintentry:	
  3062 ;; *************** function _Int_ *****************
  3063 ;; Defined at:
  3064 ;;		line 122 in file "AN1779_Source_Code_main.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;		None               void
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, pclath, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3078 ;;      Params:         0       0       0       0
  3079 ;;      Locals:         0       0       0       0
  3080 ;;      Temps:          4       0       0       0
  3081 ;;      Totals:         4       0       0       0
  3082 ;;Total ram usage:        4 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    1
  3085 ;; This function calls:
  3086 ;;		_Check_Overcurrent
  3087 ;;		_TMR1_Reload
  3088 ;;		i1_ADC_Initialization
  3089 ;; This function is called by:
  3090 ;;		Interrupt level 1
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094  0004                     _Int_:	
  3095                           
  3096                           ;incstack = 0
  3097                           ; Regs used in _Int_: [wreg+status,2+status,0+pclath+cstack]
  3098  0004  3180               	pagesel	$
  3099  0005  0020               	movlb	0	; select bank0
  3100  0006  087F               	movf	127,w
  3101  0007  00F6               	movwf	??_Int_+3
  3102                           
  3103                           ;AN1779_Source_Code_main.c: 124: if (PIR1bits.TMR1IF == 1)
  3104  0008  1C11               	btfss	17,0	;volatile
  3105  0009  2874               	goto	i1l1755
  3106                           
  3107                           ;AN1779_Source_Code_main.c: 125: {
  3108                           ;AN1779_Source_Code_main.c: 126: ADCON0bits.CHS = 0x1D;
  3109  000A  0021               	movlb	1	; select bank1
  3110  000B  081D               	movf	29,w	;volatile
  3111  000C  3983               	andlw	-125
  3112  000D  3874               	iorlw	116
  3113  000E  009D               	movwf	29	;volatile
  3114                           
  3115                           ;AN1779_Source_Code_main.c: 127: _delay((unsigned long)((300)*(16000000/4000000.0)));
  3116  000F  30EF               	movlw	239
  3117  0010  00F3               	movwf	??_Int_
  3118  0011                     u138_27:	
  3119  0011  2812               	nop2
  3120  0012  0BF3               	decfsz	??_Int_,f
  3121  0013  2811               	goto	u138_27
  3122  0014  2815               	nop2	;nop
  3123  0015  2816               	nop2	;nop
  3124                           
  3125                           ;AN1779_Source_Code_main.c: 128: ADCON0bits.ADON = 1;
  3126  0016  0021               	movlb	1	; select bank1
  3127  0017  141D               	bsf	29,0	;volatile
  3128                           
  3129                           ;AN1779_Source_Code_main.c: 129: ADCON0bits.GO = 1;
  3130  0018  149D               	bsf	29,1	;volatile
  3131                           
  3132                           ;AN1779_Source_Code_main.c: 130: _delay((unsigned long)((300)*(16000000/4000000.0)));
  3133  0019  30EF               	movlw	239
  3134  001A  00F3               	movwf	??_Int_
  3135  001B                     u139_27:	
  3136  001B  281C               	nop2
  3137  001C  0BF3               	decfsz	??_Int_,f
  3138  001D  281B               	goto	u139_27
  3139  001E  281F               	nop2	;nop
  3140  001F  2820               	nop2	;nop
  3141                           
  3142                           ;AN1779_Source_Code_main.c: 132: TempResult = ADRES;
  3143  0020  0021               	movlb	1	; select bank1
  3144  0021  081C               	movf	28,w	;volatile
  3145  0022  01F8               	clrf	_TempResult+1
  3146  0023  07F8               	addwf	_TempResult+1,f
  3147  0024  081B               	movf	27,w	;volatile
  3148  0025  01F7               	clrf	_TempResult
  3149  0026  07F7               	addwf	_TempResult,f
  3150                           
  3151                           ;AN1779_Source_Code_main.c: 136: TempResult += 60;
  3152  0027  303C               	movlw	60
  3153  0028  07F7               	addwf	_TempResult,f
  3154  0029  3000               	movlw	0
  3155  002A  3DF8               	addwfc	_TempResult+1,f
  3156                           
  3157                           ;AN1779_Source_Code_main.c: 137: if (TempResult > 571)
  3158  002B  3002               	movlw	2
  3159  002C  0278               	subwf	_TempResult+1,w
  3160  002D  303C               	movlw	60
  3161  002E  1903               	skipnz
  3162  002F  0277               	subwf	_TempResult,w
  3163  0030  1C03               	skipc
  3164  0031  285A               	goto	i1l1737
  3165                           
  3166                           ;AN1779_Source_Code_main.c: 138: {
  3167                           ;AN1779_Source_Code_main.c: 139: CWG1AS0bits.SHUTDOWN = 1;
  3168  0032  002D               	movlb	13	; select bank13
  3169  0033  1793               	bsf	19,7	;volatile
  3170                           
  3171                           ;AN1779_Source_Code_main.c: 140: PORTAbits.RA1 = 0;
  3172  0034  0020               	movlb	0	; select bank0
  3173  0035  108C               	bcf	12,1	;volatile
  3174  0036                     i1l191:	
  3175                           ;AN1779_Source_Code_main.c: 141: while(TempResult > 571)
  3176                           
  3177  0036  3002               	movlw	2
  3178  0037  0278               	subwf	_TempResult+1,w
  3179  0038  303C               	movlw	60
  3180  0039  1903               	skipnz
  3181  003A  0277               	subwf	_TempResult,w
  3182  003B  1C03               	btfss	3,0
  3183  003C  285A               	goto	i1l1737
  3184                           
  3185                           ;AN1779_Source_Code_main.c: 142: {
  3186                           ;AN1779_Source_Code_main.c: 143: PORTAbits.RA2 = 1;
  3187  003D  0020               	movlb	0	; select bank0
  3188  003E  150C               	bsf	12,2	;volatile
  3189                           
  3190                           ;AN1779_Source_Code_main.c: 144: _delay((unsigned long)((100)*(16000000/4000.0)));
  3191  003F  3003               	movlw	3
  3192  0040  00F5               	movwf	??_Int_+2
  3193  0041  3008               	movlw	8
  3194  0042  00F4               	movwf	??_Int_+1
  3195  0043  3078               	movlw	120
  3196  0044  00F3               	movwf	??_Int_
  3197  0045                     u140_27:	
  3198  0045  0BF3               	decfsz	??_Int_,f
  3199  0046  2845               	goto	u140_27
  3200  0047  0BF4               	decfsz	??_Int_+1,f
  3201  0048  2845               	goto	u140_27
  3202  0049  0BF5               	decfsz	??_Int_+2,f
  3203  004A  2845               	goto	u140_27
  3204                           
  3205                           ;AN1779_Source_Code_main.c: 145: PORTAbits.RA2 = 0;
  3206  004B  0020               	movlb	0	; select bank0
  3207  004C  110C               	bcf	12,2	;volatile
  3208                           
  3209                           ;AN1779_Source_Code_main.c: 146: _delay((unsigned long)((100)*(16000000/4000.0)));
  3210  004D  3003               	movlw	3
  3211  004E  00F5               	movwf	??_Int_+2
  3212  004F  3008               	movlw	8
  3213  0050  00F4               	movwf	??_Int_+1
  3214  0051  3078               	movlw	120
  3215  0052  00F3               	movwf	??_Int_
  3216  0053                     u141_27:	
  3217  0053  0BF3               	decfsz	??_Int_,f
  3218  0054  2853               	goto	u141_27
  3219  0055  0BF4               	decfsz	??_Int_+1,f
  3220  0056  2853               	goto	u141_27
  3221  0057  0BF5               	decfsz	??_Int_+2,f
  3222  0058  2853               	goto	u141_27
  3223  0059  2836               	goto	i1l191
  3224  005A                     i1l1737:	
  3225                           
  3226                           ;AN1779_Source_Code_main.c: 147: }
  3227                           ;AN1779_Source_Code_main.c: 148: }
  3228                           ;AN1779_Source_Code_main.c: 149: ADC_Initialization ();
  3229  005A  24ED               	fcall	i1_ADC_Initialization
  3230                           
  3231                           ;AN1779_Source_Code_main.c: 150: ADCON0bits.ADON = 1;
  3232  005B  0021               	movlb	1	; select bank1
  3233  005C  141D               	bsf	29,0	;volatile
  3234                           
  3235                           ;AN1779_Source_Code_main.c: 151: ADCON0bits.GO = 1;
  3236  005D  149D               	bsf	29,1	;volatile
  3237                           
  3238                           ;AN1779_Source_Code_main.c: 152: _delay((unsigned long)((300)*(16000000/4000000.0)));
  3239  005E  30EF               	movlw	239
  3240  005F  00F3               	movwf	??_Int_
  3241  0060                     u142_27:	
  3242  0060  2861               	nop2
  3243  0061  0BF3               	decfsz	??_Int_,f
  3244  0062  2860               	goto	u142_27
  3245  0063  2864               	nop2	;nop
  3246  0064  2865               	nop2	;nop
  3247                           
  3248                           ;AN1779_Source_Code_main.c: 153: ADCValue = ADRES;
  3249  0065  0021               	movlb	1	; select bank1
  3250  0066  081C               	movf	28,w	;volatile
  3251  0067  0020               	movlb	0	; select bank0
  3252  0068  01C2               	clrf	_ADCValue+1
  3253  0069  07C2               	addwf	_ADCValue+1,f
  3254  006A  0021               	movlb	1	; select bank1
  3255  006B  081B               	movf	27,w	;volatile
  3256  006C  0020               	movlb	0	; select bank0
  3257  006D  01C1               	clrf	_ADCValue
  3258  006E  07C1               	addwf	_ADCValue,f
  3259                           
  3260                           ;AN1779_Source_Code_main.c: 155: TMR1_Reload();
  3261  006F  2527               	fcall	_TMR1_Reload
  3262                           
  3263                           ;AN1779_Source_Code_main.c: 156: Check_Overcurrent ();
  3264  0070  23F5               	fcall	_Check_Overcurrent
  3265                           
  3266                           ;AN1779_Source_Code_main.c: 157: INTCONbits.GIE = 1;
  3267  0071  178B               	bsf	11,7	;volatile
  3268                           
  3269                           ;AN1779_Source_Code_main.c: 158: PIR1bits.TMR1IF = 0;
  3270  0072  0020               	movlb	0	; select bank0
  3271  0073  1011               	bcf	17,0	;volatile
  3272  0074                     i1l1755:	
  3273                           
  3274                           ;AN1779_Source_Code_main.c: 159: }
  3275                           ;AN1779_Source_Code_main.c: 160: INTCONbits.GIE = 1;
  3276  0074  178B               	bsf	11,7	;volatile
  3277                           
  3278                           ;AN1779_Source_Code_main.c: 161: PIR1bits.TMR1IF = 0;
  3279  0075  1011               	bcf	17,0	;volatile
  3280  0076  0876               	movf	??_Int_+3,w
  3281  0077  00FF               	movwf	127
  3282  0078  0009               	retfie
  3283  0079                     __end_of_Int_:	
  3284                           
  3285                           	psect	text24
  3286  04ED                     __ptext24:	
  3287 ;; *************** function i1_ADC_Initialization *****************
  3288 ;; Defined at:
  3289 ;;		line 345 in file "AN1779_Source_Code_main.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;		None               void
  3296 ;; Registers used:
  3297 ;;		wreg, status,2
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3303 ;;      Params:         0       0       0       0
  3304 ;;      Locals:         0       0       0       0
  3305 ;;      Temps:          1       0       0       0
  3306 ;;      Totals:         1       0       0       0
  3307 ;;Total ram usage:        1 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_Int_
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           
  3317                           ;psect for function i1_ADC_Initialization
  3318  04ED                     i1_ADC_Initialization:	
  3319                           
  3320                           ;AN1779_Source_Code_main.c: 347: ADRESH = 0x00;
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in i1_ADC_Initialization: [wreg+status,2]
  3324  04ED  0021               	movlb	1	; select bank1
  3325  04EE  019C               	clrf	28	;volatile
  3326                           
  3327                           ;AN1779_Source_Code_main.c: 348: ADRESL = 0x00;
  3328  04EF  019B               	clrf	27	;volatile
  3329                           
  3330                           ;AN1779_Source_Code_main.c: 349: ADCON1 = 0b11010000;
  3331  04F0  30D0               	movlw	208
  3332  04F1  009E               	movwf	30	;volatile
  3333                           
  3334                           ;AN1779_Source_Code_main.c: 351: ADCON0 = 0b00001100;
  3335  04F2  300C               	movlw	12
  3336  04F3  009D               	movwf	29	;volatile
  3337                           
  3338                           ;AN1779_Source_Code_main.c: 352: _delay((unsigned long)((300)*(16000000/4000000.0)));
  3339  04F4  30EF               	movlw	239
  3340  04F5  00F0               	movwf	??i1_ADC_Initialization
  3341  04F6                     u143_27:	
  3342  04F6  2CF7               	nop2
  3343  04F7  0BF0               	decfsz	??i1_ADC_Initialization,f
  3344  04F8  2CF6               	goto	u143_27
  3345  04F9  2CFA               	nop2	;nop
  3346  04FA  2CFB               	nop2	;nop
  3347  04FB  0008               	return
  3348  04FC                     __end_ofi1_ADC_Initialization:	
  3349                           
  3350                           	psect	text25
  3351  0527                     __ptext25:	
  3352 ;; *************** function _TMR1_Reload *****************
  3353 ;; Defined at:
  3354 ;;		line 427 in file "AN1779_Source_Code_main.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;		None               void
  3361 ;; Registers used:
  3362 ;;		wreg, status,2
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3368 ;;      Params:         0       0       0       0
  3369 ;;      Locals:         0       0       0       0
  3370 ;;      Temps:          0       0       0       0
  3371 ;;      Totals:         0       0       0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_Int_
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function _TMR1_Reload
  3383  0527                     _TMR1_Reload:	
  3384                           
  3385                           ;AN1779_Source_Code_main.c: 429: TMR1H = Timer1ReloadVal>> 8;
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _TMR1_Reload: [wreg+status,2]
  3389  0527  087B               	movf	_Timer1ReloadVal+1,w
  3390  0528  0020               	movlb	0	; select bank0
  3391  0529  0097               	movwf	23	;volatile
  3392                           
  3393                           ;AN1779_Source_Code_main.c: 430: TMR1L = Timer1ReloadVal;
  3394  052A  087A               	movf	_Timer1ReloadVal,w
  3395  052B  0096               	movwf	22	;volatile
  3396  052C  0008               	return
  3397  052D                     __end_of_TMR1_Reload:	
  3398                           
  3399                           	psect	text26
  3400  03F5                     __ptext26:	
  3401 ;; *************** function _Check_Overcurrent *****************
  3402 ;; Defined at:
  3403 ;;		line 511 in file "AN1779_Source_Code_main.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;		None               void
  3410 ;; Registers used:
  3411 ;;		wreg
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3417 ;;      Params:         0       0       0       0
  3418 ;;      Locals:         0       0       0       0
  3419 ;;      Temps:          3       0       0       0
  3420 ;;      Totals:         3       0       0       0
  3421 ;;Total ram usage:        3 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_Int_
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           
  3431                           ;psect for function _Check_Overcurrent
  3432  03F5                     _Check_Overcurrent:	
  3433                           
  3434                           ;AN1779_Source_Code_main.c: 513: if (CWG1AS0bits.SHUTDOWN == 1)
  3435                           
  3436                           ;incstack = 0
  3437                           ; Regs used in _Check_Overcurrent: [wreg]
  3438  03F5  002D               	movlb	13	; select bank13
  3439  03F6  1F93               	btfss	19,7	;volatile
  3440  03F7  0008               	return
  3441  03F8                     i1l1705:	
  3442  03F8  002D               	movlb	13	; select bank13
  3443  03F9  1F93               	btfss	19,7	;volatile
  3444  03FA  0008               	return
  3445                           
  3446                           ;AN1779_Source_Code_main.c: 516: {
  3447                           ;AN1779_Source_Code_main.c: 517: PORTAbits.RA3 = 1;
  3448                           
  3449                           ;AN1779_Source_Code_main.c: 514: {
  3450                           ;AN1779_Source_Code_main.c: 515: while (CWG1AS0bits.SHUTDOWN)
  3451  03FB  0020               	movlb	0	; select bank0
  3452  03FC  158C               	bsf	12,3	;volatile
  3453                           
  3454                           ;AN1779_Source_Code_main.c: 518: _delay((unsigned long)((100)*(16000000/4000.0)));
  3455  03FD  3003               	movlw	3
  3456  03FE  00F2               	movwf	??_Check_Overcurrent+2
  3457  03FF  3008               	movlw	8
  3458  0400  00F1               	movwf	??_Check_Overcurrent+1
  3459  0401  3078               	movlw	120
  3460  0402  00F0               	movwf	??_Check_Overcurrent
  3461  0403                     u144_27:	
  3462  0403  0BF0               	decfsz	??_Check_Overcurrent,f
  3463  0404  2C03               	goto	u144_27
  3464  0405  0BF1               	decfsz	??_Check_Overcurrent+1,f
  3465  0406  2C03               	goto	u144_27
  3466  0407  0BF2               	decfsz	??_Check_Overcurrent+2,f
  3467  0408  2C03               	goto	u144_27
  3468                           
  3469                           ;AN1779_Source_Code_main.c: 519: PORTAbits.RA3 = 0;
  3470  0409  0020               	movlb	0	; select bank0
  3471  040A  118C               	bcf	12,3	;volatile
  3472                           
  3473                           ;AN1779_Source_Code_main.c: 520: _delay((unsigned long)((100)*(16000000/4000.0)));
  3474  040B  3003               	movlw	3
  3475  040C  00F2               	movwf	??_Check_Overcurrent+2
  3476  040D  3008               	movlw	8
  3477  040E  00F1               	movwf	??_Check_Overcurrent+1
  3478  040F  3078               	movlw	120
  3479  0410  00F0               	movwf	??_Check_Overcurrent
  3480  0411                     u145_27:	
  3481  0411  0BF0               	decfsz	??_Check_Overcurrent,f
  3482  0412  2C11               	goto	u145_27
  3483  0413  0BF1               	decfsz	??_Check_Overcurrent+1,f
  3484  0414  2C11               	goto	u145_27
  3485  0415  0BF2               	decfsz	??_Check_Overcurrent+2,f
  3486  0416  2C11               	goto	u145_27
  3487  0417  2BF8               	goto	i1l1705
  3488  0418                     __end_of_Check_Overcurrent:	
  3489  007E                     btemp	set	126	;btemp
  3490  007E                     wtemp	set	126
  3491  007E                     wtemp0	set	126
  3492  0080                     wtemp1	set	128
  3493  0082                     wtemp2	set	130
  3494  0084                     wtemp3	set	132
  3495  0086                     wtemp4	set	134
  3496  0088                     wtemp5	set	136
  3497  007F                     wtemp6	set	127
  3498  007E                     ttemp	set	126
  3499  007E                     ttemp0	set	126
  3500  0081                     ttemp1	set	129
  3501  0084                     ttemp2	set	132
  3502  0087                     ttemp3	set	135
  3503  007F                     ttemp4	set	127
  3504  007E                     ltemp	set	126
  3505  007E                     ltemp0	set	126
  3506  0082                     ltemp1	set	130
  3507  0086                     ltemp2	set	134
  3508  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         38
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80     33      68
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Int_ in COMMON

    _Int_->_Check_Overcurrent

Critical Paths under _main in BANK0

    _main->_PI_Calculation
    _PWM_Calculation->___awtoft
    _PWM_Calculation->___fttol
    _PI_Calculation->___ftmul
    ___ftmul->___awtoft
    _Get_ActualSpeed->___lttoft
    ___tmul->___ltdiv
    ___lttoft->___tmul
    _DesiredSpeed_Calculation->___awtoft
    _DesiredSpeed_Calculation->___fttol
    ___awtoft->___ftpack

Critical Paths under _Int_ in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Int_ in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Int_ in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12620
                                             32 BANK0      1     1      0
                 _ADC_Initialization
                 _CCP_Initialization
                 _CWG_Initialization
                _Comp_Initialization
                 _DAC_Initialization
           _DesiredSpeed_Calculation
                 _FVR_Initialization
                    _Get_ActualSpeed
                 _Int_Initialization
                     _PI_Calculation
                    _PWM_Calculation
                        _Pin_Manager
                 _SMT_Initialization
                _TMR1_Initialization
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialization                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SMT_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Pin_Manager                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Calculation                                      0     0      0    2732
                           ___awtoft
                            ___fttol
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _PI_Calculation                                       2     2      0    4650
                                             30 BANK0      2     2      0
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2184
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _Int_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_ActualSpeed                                      0     0      0    2772
                            ___fttol
                            ___ltdiv
                           ___lttoft
                             ___tmul
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     266
                                             11 BANK0      9     3      6
                            ___ltdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lttoft                                             4     1      3    1721
                                             20 BANK0      4     1      3
                           ___ftpack
                            ___ltdiv (ARG)
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ltdiv                                             11     5      6     268
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (1) _FVR_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DesiredSpeed_Calculation                             0     0      0    2466
                           ___awtoft
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     517
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _DAC_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp_Initialization                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CWG_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP_Initialization                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialization                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1949
                                              8 BANK0      6     3      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1646
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1646
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Int_                                                 4     4      0       0
                                              3 COMMON     4     4      0
                  _Check_Overcurrent
                        _TMR1_Reload
               i1_ADC_Initialization
 ---------------------------------------------------------------------------------
 (5) i1_ADC_Initialization                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Check_Overcurrent                                    3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialization
   _CCP_Initialization
   _CWG_Initialization
   _Comp_Initialization
   _DAC_Initialization
   _DesiredSpeed_Calculation
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___fttol
   _FVR_Initialization
   _Get_ActualSpeed
     ___fttol
     ___ltdiv
     ___lttoft
       ___ftpack
       ___ltdiv (ARG)
       ___tmul (ARG)
         ___ltdiv (ARG)
     ___tmul
       ___ltdiv (ARG)
   _Int_Initialization
   _PI_Calculation
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
       ___ftpack (ARG)
     ___fttol
   _PWM_Calculation
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___fttol
     ___wmul
   _Pin_Manager
   _SMT_Initialization
   _TMR1_Initialization

 _Int_ (ROOT)
   _Check_Overcurrent
   _TMR1_Reload
   i1_ADC_Initialization

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      50       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     21      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      50      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Aug 07 14:08:25 2014

                      __CFG_CP$OFF 0000                ___wmul@multiplicand 0045  
                      __CFG_LVP$ON 0000              ??_TMR1_Initialization 0043  
                              l202 038C                                l415 0294  
                              l409 027D                                l198 0370  
                              l615 0464                                _PR2 001B  
                              u715 025F                                u735 0278  
                              u905 0112                                u755 0285  
                              u915 0118                                u835 00BE  
                              u675 0153                                u845 00CE  
                              u685 0162                                u785 029B  
                              u945 01E3                                u865 00F6  
                              u875 00FC                                u975 020D  
                     __CFG_BORV$LO 0000                                wreg 0009  
                             l1511 0253                               l1515 025A  
                             l1525 0282                               l1517 0264  
                             l1605 01DC                               l1527 028A  
                             l1519 0269                               l1631 0227  
                             l1623 020C                               l1545 0445  
                             l1633 0230                               l1625 021A  
                             l1561 00B2                               l1635 0233  
                             l1651 0321                               l1555 009C  
                             l1811 0365                               l1573 00ED  
                             l1493 0158                               l1639 0241  
                             l1663 0344                               l1911 02F4  
                             l1649 0314                               l1921 03D5  
                             l1585 0109                               l1577 00F5  
                             l1497 0167                               l1659 033A  
                             l1925 03DD                               l1589 0111  
                             l1935 045E                               u1005 0228  
                             u1045 0317                               u1065 0322  
                             u1305 03E4                               u1075 0331  
                             u1085 033B                               _LATA 010C  
                             u1335 0465                               u1345 046A  
                             u1265 02ED                               u1275 02FE  
                             u1295 03DE                               u1367 036B  
                             u1377 04D8                               _TMR1 0016  
                             _TMR2 001A                               _Int_ 0004  
                     __CFG_WRT$OFF 0000                               _main 034B  
                     ___ftpack@arg 0043                       ___ftpack@exp 0046  
                             fsr0h 0005                               fsr0l 0004  
                             indf0 0000                               btemp 007E  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
                             start 0079                               ttemp 007E  
                             wtemp 007E                       ___ftmul@cntr 005F  
               _DAC_Initialization 0521                       ___ftmul@sign 0060  
     __size_of_Comp_Initialization 000A                       ___fttol@exp1 0050  
                     ___fttol@lval 004C                  ??_Get_ActualSpeed 005B  
                            ?_Int_ 0070      __size_ofi1_ADC_Initialization 000F  
              ?_DAC_Initialization 0070                              ?_main 0070  
                            _ADRES 009B                              _CCPR1 0291  
                    __CFG_WDTE$OFF 0000                    __end_of___ftmul 0138  
                            _T1CON 0018                    __end_of___fttol 024A  
                            _T2CON 001C                    __end_of___ltdiv 034B  
                            i1l191 0036                              _TMR1H 0017  
                            _TMR1L 0016                              _TRISA 008C  
                            _TRISC 008E                      ___awtoft@sign 0050  
                    ___ftpack@sign 0047                 _CCP_Initialization 04FC  
                    ??_Pin_Manager 0043                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080               ??_DAC_Initialization 0043  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                ?_CCP_Initialization 0070  
                   __CFG_MCLRE$OFF 0000                    __initialization 007A  
                     __end_of_Int_ 0079                       __end_of_main 038F  
                   __CFG_LPBOR$OFF 0000                         _IntegValue 0031  
                           ??_Int_ 0073                             ??_main 0063  
                    ___fttol@sign1 004B               ??_CCP_Initialization 0043  
                   __CFG_PLLEN$OFF 0000        __size_of_SMT_Initialization 0022  
                 _SpeedMeasurement 002C                             _ADCON0 009D  
                           _ADCON1 009E                             _ADRESH 009C  
                           _ADRESL 009B                     __CFG_ZCDDIS$ON 0000  
                 __end_of___awtoft 045B                             _ANSELA 018C  
                           _ANSELC 018E                   __end_of___ftpack 02AB  
                           _T1GCON 0019                             i1l1705 03F8  
                           i1l1737 005A                             i1l1755 0074  
                           u140_27 0045                             u141_27 0053  
                           u142_27 0060                             u143_27 04F6  
                           u144_27 0403                             u145_27 0411  
                           u138_27 0011                             u139_27 001B  
                 __end_of___lttoft 04AA                             _OSCCON 0099  
                           _TMR2IF 0089                             _SMT1PR 0D95  
                   __CFG_PWRTE$OFF 0000                         _TempResult 0077  
               _Int_Initialization 052D                    _PWM_Calculation 02AB  
              __end_of_Pin_Manager 04BC        __size_of_ADC_Initialization 0010  
                     ?_TMR1_Reload 0070                             ___tmul 03CE  
                       _SpeedError 003B                             ___wmul 045B  
                   __CFG_STVREN$ON 0000                          ??___ftmul 0057  
                        ??___fttol 0047                          ??___ltdiv 0049  
__size_of_DesiredSpeed_Calculation 001C                ?_Int_Initialization 0070  
        ?_DesiredSpeed_Calculation 0070                  _Check_Overcurrent 03F5  
               ?_Check_Overcurrent 0070              ___ftmul@f3_as_product 005C  
              ??_Check_Overcurrent 0070               ??_Int_Initialization 0043  
                  __CFG_FOSC$INOSC 0000            __end_of__initialization 0083  
                       ___awtoft@c 004B                         ___ftmul@f1 0051  
                       ___ftmul@f2 0054                         ___fttol@f1 0043  
                   __pcstackCOMMON 0070          __end_of_Check_Overcurrent 0418  
               _FVR_Initialization 0514                         ___lttoft@c 0057  
      __size_of_CWG_Initialization 0012                       _CWG1CON0bits 0696  
              ?_FVR_Initialization 0070                _Comp_Initialization 050A  
                   _SpeedReference 003F                         __pbssBANK0 0020  
          __end_of_PWM_Calculation 0306                        _Pin_Manager 04AA  
                       __pnvCOMMON 007A                    _Get_ActualSpeed 038F  
             ??_FVR_Initialization 0043                         __pmaintext 034B  
             ?_Comp_Initialization 0070                            ?___tmul 004E  
                          ?___wmul 0043        __end_of_TMR1_Initialization 04ED  
                       __pintentry 0004                            _CM1CON0 0111  
                          _CM1CON1 0112                            _CCP1CON 0293  
                          _CM2CON0 0113                            _CM2CON1 0114  
                        ?___awtoft 004B                          ?___ftpack 0043  
                          _CWG1DBF 0692                            _CWG1AS0 0693  
                          _CWG1DBR 0691                            _CWG1ISM 069A  
                        ?___lttoft 0057                    _Timer1ReloadVal 007A  
                  __CFG_WDTCCS$SWC 0000                            _SMT1CLK 0D9B  
                          _SMT1CPR 0D8F                            _SMT1CPW 0D92  
                          _SMT1SIG 0D9C                            _SMT1TMR 0D8C  
                          _PIValue 0033       __end_ofi1_ADC_Initialization 04FC  
          __size_of_PI_Calculation 008B              ??_Comp_Initialization 0043  
                          _PropOut 0026         __size_of_Check_Overcurrent 0023  
                      _SpeedActual 0039                    __size_of___tmul 0027  
                  __size_of___wmul 001E                            ___ftmul 0085  
                          ___fttol 01C3                            ___ltdiv 0306  
                        _CWG1OCON1 0698               __size_of_TMR1_Reload 0006  
                       ??___awtoft 004E                         ??___ftpack 0048  
                          __ptext1 04DE                            __ptext2 0418  
                          __ptext3 04AA                            __ptext4 02AB  
                          __ptext5 045B                            __ptext6 0138  
                          __ptext7 0085                            __ptext8 052D  
                          __ptext9 038F                         ??___lttoft 005A  
                        _T1CONbits 0018                          _T2CONbits 001C  
                        _CMOUTbits 0115                            clrloop0 051C  
          __end_of_Get_ActualSpeed 03CE               end_of_initialization 0083  
                 ?_PWM_Calculation 0070        __size_of_DAC_Initialization 0006  
 __end_of_DesiredSpeed_Calculation 0495                   ___ltdiv@dividend 0046  
                        _PORTAbits 000C         __end_of_SMT_Initialization 043A  
      __size_of_CCP_Initialization 000E                   ___ltdiv@quotient 004A  
                        _PWMResult 0023         __end_of_ADC_Initialization 04DE  
                      ___ftmul@exp 005B                     __end_of___tmul 03F5  
                   __end_of___wmul 0479               i1_ADC_Initialization 04ED  
              start_initialization 007A                          _DutyCycle 002F  
                 ?_Get_ActualSpeed 0070        __size_of_Int_Initialization 0005  
                     ?_Pin_Manager 0070                     _PI_Calculation 0138  
         _DesiredSpeed_Calculation 0479                           ??___tmul 0054  
                         ??___wmul 0047         __end_of_CWG_Initialization 04CE  
                        _PropValue 0037              ?i1_ADC_Initialization 0070  
                   ___tmul@product 0054                  __size_of___awtoft 0021  
                __size_of___ftpack 0061                        __pbssCOMMON 0077  
                __size_of___lttoft 0015                          ___latbits 0000  
                    __pcstackBANK0 0043             __end_of_PI_Calculation 01C3  
                      _CWG1AS0bits 0693                        _CWG1AS1bits 0694  
                    _SpeedIntegral 003D        __size_of_FVR_Initialization 0007  
                         ?___ftmul 0051                           ?___fttol 0043  
                         ?___ltdiv 0043                           _DAC1CON0 0118  
                         _DAC1CON1 0119       __size_of_TMR1_Initialization 000F  
                         _ADCValue 0041                           _CWG1CON0 0696  
                         _CWG1CON1 0697                    ?_PI_Calculation 0070  
                         _T2CLKCON 001E        __end_of_Comp_Initialization 0514  
                   ___wmul@product 0047                          clear_ram0 051B  
                         _PIE1bits 0091                    ___ltdiv@divisor 0043  
                         _PIR1bits 0011                    ___ltdiv@counter 004D  
                         _SMT1CON0 0D98                           _SMT1CON1 0D99  
                    ??_TMR1_Reload 0070               __CFG_WDTCPS$WDTCPS1F 0000  
           ??i1_ADC_Initialization 0070                         _ADCON0bits 009D  
                ___wmul@multiplier 0043                           _PWMValue 0035  
              ___tmul@multiplicand 0051                       _SMT1CON1bits 0D99  
       __end_of_DAC_Initialization 0527                 _SMT_Initialization 0418  
                         _IntegOut 0020               __size_of_Pin_Manager 0012  
              ?_SMT_Initialization 0070           __size_of_PWM_Calculation 005B  
                 __size_of___ftmul 00B3                   __size_of___fttol 0087  
                 __size_of___ltdiv 0045                           ___awtoft 043A  
                         ___ftpack 024A         __end_of_CCP_Initialization 050A  
               _ADC_Initialization 04CE                         _CWG1CLKCON 0699  
                         ___lttoft 0495                __end_of_TMR1_Reload 052D  
                     _SpeedCounter 0079               ??_SMT_Initialization 0043  
              ?_ADC_Initialization 0070                           __ptext10 03CE  
                         __ptext11 0495                           __ptext20 04CE  
                         __ptext12 0306                           __ptext21 043A  
                         __ptext13 0514                           __ptext22 024A  
                         __ptext14 0479                           __ptext15 01C3  
                         __ptext24 04ED                           __ptext16 0521  
                         __ptext25 0527                           __ptext17 050A  
                         __ptext26 03F5                           __ptext18 04BC  
                         __ptext19 04FC         ??_DesiredSpeed_Calculation 0051  
                    __size_of_Int_ 0075                      __size_of_main 0044  
             __CFG_WDTCWS$WDTCWSSW 0000               ??_ADC_Initialization 0043  
                       _INTCONbits 000B                         _FVRCONbits 0117  
               _CWG_Initialization 04BC         __end_of_Int_Initialization 0532  
                         intlevel1 0000                ?_CWG_Initialization 0070  
                __CFG_CLKOUTEN$OFF 0000                _TMR1_Initialization 04DE  
         __size_of_Get_ActualSpeed 003F                        _TMR1_Reload 0527  
                ___tmul@multiplier 004E               ??_CWG_Initialization 0043  
                ??_PWM_Calculation 0051               ?_TMR1_Initialization 0070  
                 ??_PI_Calculation 0061                   _SpeedCalculation 0029  
       __end_of_FVR_Initialization 051B  
